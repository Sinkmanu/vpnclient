<?xml version="1.0" encoding="utf-8"?>
<?xsl-stylesheet type="text/xsl" href="../transforms/module/module2html.xsl"?>

<?xml-model href="https://github.com/commoncriteria/transforms/raw/master/schemas/CCModule.rng" type="application/xml" schematypens="http://relaxng.org/ns/structure/1.0"?>

<Module boilerplate="yes" target-products="VPN Client" xmlns="https://niap-ccevs.org/cc/v1" name="Virtual Private Network (VPN) Clients" xmlns:h="http://www.w3.org/1999/xhtml">
  <PPReference>
    <ReferenceTable>
      <PPVersion>2.1</PPVersion>
      <PPAuthor>National Information Assurance Partnership</PPAuthor>
      <PPPubDate>2019-11-14</PPPubDate>
      <Keywords>VPN, VPN Client</Keywords>
    </ReferenceTable>
  </PPReference>
  <RevisionHistory>
    <entry>
      <version>2.1</version>
      <date>2019-11-14</date>
      <subject>Initial Release</subject>
    </entry>
  </RevisionHistory>
  
  <chapter title="Introduction" id="int">
    <section title="Overview" id="ppoverview"> 
      The scope of this PP-Module is to describe the security functionality of a virtual private network (VPN)
      client in terms of  <cite linkend="bibCC"/> and to define functional and assurance requirements for such products. This PP-Module is intended for use with the following Base-PPs:
      
      <h:ul>
        <h:li>Protection Profile for General Purpose Operating Systems (GPOS PP)</h:li>
        <h:li>Protection Profile for Mobile Device Fundamentals (MDF PP)</h:li>
        <h:li>Protection Profile for Application Software (App PP)</h:li>
      </h:ul>
      
      These Base-PPs are all valid because a VPN client may be a specific type of stand-alone software
      application or a built-in component of an operating system, whether desktop or mobile. Regardless of
      which Base-PP is claimed, the VPN client functionality defined by this PP-Module will rely on the Base-PP. 
      Sections 5.1, 5.2, and 5.3 of this PP-Module describe the relevant functionality for each Base-PP,
      including specific selections, assignments, or inclusion of optional requirements that must be made as
      needed to support the VPN client functionality.
     </section>
    
    <tech-terms>
      <term full="Administrator"> 
        A user that has administrative privilege to configure the TOE in privileged
        mode. </term>
      <term full="Authorized"> 
        An entity granted access privileges to an object, system or system entity.
      </term>
      <term abbr="CSP" full="Critical Security Parameter"> 
        Security related information, e.g. secret and private cryptographic keys, and
        authentication data such as passwords and PINs, whose disclosure or
        modification can compromise the security of a cryptographic module. </term>
      <term full="Entropy Source"> 
        This cryptographic function provides a seed for a random number generator
        by accumulating the outputs from one or more noise sources. The
        functionality includes a measure of the minimum work required to guess a
        given output and tests to ensure that the noise sources are operating
        properly.
      </term>
      <term full="IT Environment"> 
        Hardware and software that are outside the TOE boundary that support the
        TOE functionality and security policy. </term>
      <term full="Operational Environment"> 
        The environment in which the TOE is operated.</term>
      <term full="Private Network"> 
        A network that is protected from access by unauthorized users or entities.
      </term>
      <term full="Privileged Mode"> 
        A TOE operational mode that allows a user to perform functions that require
        IT Environment administrator privileges.
      </term>
      <term full="Public Network"> 
        A network that is visible to all users and entities and does not protect against
        unauthorized access (e.g. internet).
      </term>
      <term full="Threat Agent"> 
        An entity that tries to harm an information system through destruction,
        disclosure, modification of data, and/or denial of service.</term>
      <term full="Unauthorized User"> 
        An entity (device or user) who has not been authorized by an authorized
        administrator to access the TOE or private network.
      </term>
      <term full="Unprivileged Mode"> 
        A TOE operational mode that only provides VPN client functions for the VPN
        Client user. </term>
      <term full="VPN Client"> 
        The TOE; allows remote users to use client computers to establish an
        encrypted IPsec tunnel across an unprotected public network to a private
        network.
      </term>
      <term full="VPN Client User"> 
        A user operating the TOE in unprivileged mode.</term>
      <term full="VPN Gateway"> 
        A component that performs encryption and decryption of IP packets as they
        cross the boundary between a private network and a public network. </term>
      <term abbr="AES" full="Advanced Encryption Standard"/>
      <term abbr="CC" full="Common Criteria"/>
      <term abbr="CRL" full="Certificate Revocation List"/>
      <term abbr="CSP" full="Critical Security Parameter"/>
      <term abbr="DES" full="Data Encryption Standard"/>
      <term abbr="DH" full="Diffie-Hellman"/>
      <term abbr="DN" full="Distinguished Name"/>
      <term abbr="DSS" full="Digital Signature Standard"/>
      <term abbr="ECC" full="Elliptic Curve Cryptography"/>
      <term abbr="ESP" full="Encapsulating Security Protocol"/>
      <term abbr="EUD" full="End-User Device"/>
      <term abbr="FFC" full="Finite Field Cryptography"/>
      <term abbr="FFC" full="Finite Field Cryptography"/>
      <term abbr="FIPS" full="Federal Information Processing Standards"/>
      <term abbr="FQDN" full="Fully Qualified Domain Name"/>
      <term abbr="GPOS" full="General Purpose Operating System"/>
      <term abbr="ICMP" full="Internet Control Message Protocol"/>
      <term abbr="IKE" full="Internet Key Exchange"/>
      <term abbr="IP" full="Internet Protocol"/>
      <term abbr="IT" full="Information Technology"/>
      <term abbr="MDF" full="Mobile Device Fundamentals"/>
      <term abbr="NAT" full="Network Address Translation"/>
      <term abbr="NIST" full="National Institute of Standards and Technology"/>
      <term abbr="OCSP" full="Online Certificate Status Protocol"/>
      <term abbr="OS" full="Operating System"/>
      <term abbr="OSP" full="Organizational Security Policy"/>
      <term abbr="PP" full="Protection Profile"/>
      <term abbr="PUB" full="Publication"/>
      <term abbr="RBG" full="Random Bit Generation"/>
      <term abbr="RFC" full="Request For Comment"/>
      <term abbr="SA" full="Security Association"/>
      <term abbr="SAR" full="Security Assurance Requirement"/>
      <term abbr="SD" full="Security Assurance Requirement"/>
      <term abbr="SFR" full="Security Functional Requirement"/>
      <term abbr="SHA" full="Secure Hash Algorithm"/>
      <term abbr="SPD" full="Security Policy Database"/>
      <term abbr="ST" full="Security Target"/>
      <term abbr="TCP" full="Transmission Control Protocol"/>
      <term abbr="TOE" full="Target of Evaluation"/>
      <term abbr="TSF" full="TOE Security Function"/>
      <term abbr="TSS" full="TOE Security Specification"/>
      <term abbr="UDP" full="User Datagram Protocol"/>
      <term abbr="VPN" full="Virtual Private Network"/>
      
    </tech-terms>
    <section title="Compliant Targets of Evaluation" id="TOEdescription">
      The TOE defined by this PP-Module is the VPN client, a software application that runs on a physical or
      virtual host platform, used to establish a secure IPsec connection between that host platform and a
      remote system. The VPN client is intended to be located outside or inside of a private network, and
      establishes a secure tunnel to an IPsec peer. For the purposes of this PP-Module, IPsec peers are defined
      as: 
      
      <h:ul>
        <h:li>VPN gateways</h:li>
        <h:li>other VPN clients</h:li>
        <h:li>an IPsec-capable network device (supporting IPsec for the purposes of management)</h:li>
      </h:ul>
      
      The tunnel provides confidentiality, integrity, and data authentication for information that travels across
      a less trusted (sometimes public) network. All VPN clients that comply with this document will support
      IPsec.<h:p/>
      
      This PP-Module extends the GPOS PP when the VPN client is installed on an operating system that is
      discussed in that PP (e.g., Windows, Mac OS, Linux). This PP-Module extends the MDF PP when the VPN
      client is installed on a self-contained mobile device that is bundled with an operating system (e.g.
      Android, BlackBerry OS, iOS, Windows Mobile). This PP-Module extends the App PP when the VPN client
      is provided by a third party and is a standalone application that is not a bundled part of an operating
      system or mobile device.<h:p/>
      
      As a PP-Module of any of these PPs, it is expected that the content of this PP-Module and the chosen
      Base-PP be appropriately combined in the context of each product-specific Security Target. This PP-Module has been specifically defined such that there should be no difficulty or ambiguity in doing so.
      When this PP-Module is used, conformant TOEs are obligated to implement the functionality required in
      the claimed Base-PP with the additional functionality defined in this PP-Module in response to the
      threat environment discussed subsequently herein.
      
      <subsection title="TOE Boundary" id="TOEboundary"> 
        The TOE defined by this PP-Module is purely a software solution executing on a “platform” (some sort of
        operating system running on hardware). Depending on the Base-PP claimed as part of the TOE, the
        platform may also be part of the TOE or it may be an environmental component that the TOE vendor has
        no control over. Regardless of whether the platform itself is within the scope of the evaluation, the VPN
        client itself will rely on the platform for its execution domain and proper usage. The vendor is expected
        to provide sufficient installation and configuration instructions to identify an Operational Environment
        with the necessary features and to provide instructions for how to configure it correctly.<h:p/>
        
        The PP-Module contains requirements that must be met by the TOE. Depending on the Base-PP that is
        claimed, there may be some variation in the applicable requirements. This is because a given Base-PP
        may include one or more requirements that the VPN client can inherit but are not shared amongst each
        possible Base-PP.<h:p/>
        
        This is somewhat different than other PPs, but addresses most implementations of VPN clients where
        some part of the functionality of the IPsec tunnel is provided by the platform. In terms of the
        cryptographic primitives (random bit generation, encryption/decryption, key generation, etc.) it is
        actually desirable that a well-tested implementation in the platform is used rather than trying to
        implement these functions in each client.<h:p/>
        
        Requirements that can be satisfied by either the TOE or the platform are identified in Section 5 by text
        such as “The [selection: TSF, TOE platform] shall…”. The ST author will make the appropriate selection
        based on where that element is implemented. It is allowable for some elements in a component to be
        implemented by the TOE, while other elements in that same component be implemented by the
        platform (requirements on the usage of X.509 certificates is an example of where this might be the case,
        where using the information contained in the certificates and the implementation of revocation
        checking may be done by the TOE, but storage and protection of the certificates may be done by the
        platform). Note that in the cases where this PP-Module is used to extend the GPOS PP or MDF PP, “the
        TOE” includes both the VPN client and the platform. In this case, it is appropriate to indicate that the
        TOE satisfies this requirement. However, the ST author should make it clear, for each of these
        components, which are implemented by the VPN client portion of the TOE versus the platform portion.<h:p/>
        
        A Supporting Document (SD) accompanies this PP-Module and contains guidance for how to evaluate
        the requirements defined by the PP-Module, expressed as ‘Evaluation Activities’. Evaluation Activities
        will differ based on where the function that meets the requirement is implemented. In most cases,
        requirements implemented by the platform will require that the evaluator examine documents
        pertaining to the platform (generally the ST), while requirements implemented by the TOE may require
        examination of the TSS, examination of the Operational Guidance, and/or execution of evaluator
        testing. For requirements implemented by the platform there may also be requirements that the
        evaluators examine the interfaces used by the TOE to access these functions on the platform to ensure
        that the functionality being invoked to satisfy the requirements of this PP-Module is the same
        functionality that was evaluated.<h:p/>
        
        Given the degree of coupling between a VPN client and its underlying platform, it is expected that the
        client will be tested on each platform claimed in the ST. In cases where the platforms are simply
        different versions of the same operating system (provided by the same platform vendor), an equivalency
        argument may be made in lieu of testing on each version. The argument would have to demonstrate
        that the client interacts in exactly the same way with the versions of the OS - e.g., same APIs are used
        with the same parameters, the network stack is modified with exactly the same kernel modules. The
        evaluator uses the operational guidance to configure the TOE and underlying platform.<h:p/>
        
        A TOE that conforms to this PP-Module will implement the Internet Engineering Task Force (IETF)
        Internet Protocol Security (IPsec) Security Architecture for the Internet Protocol, RFC 4301, as well as
        the IPsec Encapsulating Security Payload (ESP) protocol. IPsec ESP is specified in RFC 2406 and RFC 4303.
        The IPsec VPN client will support ESP in either tunnel mode, transport mode, or both modes. <h:p/>
        
        The IPsec VPN client will use either the Internet Key Exchange (IKE)v1 protocol as defined in RFCs 2407,
        2408, 2409, 4109 or the IKEv2 protocol as specified in RFCs 7296 (with mandatory support for NAT
        traversal as specified in section 2.23), and 4307 to authenticate and establish session keys with the VPN
        entities.<h:p/>
        
        In order to show that the TSF implements the RFCs correctly, the evaluator shall perform Assurance
        Activities documented in the Supporting Document that accompanies this PP-Module. In future versions
        of this PP-Module, Evaluation Activities may be augmented, or new ones introduced that cover more
        aspects of RFC compliance than is currently described in this publication.<h:p/>
        
        The IPsec VPN client enables encryption of all information that flows between itself and its IPsec peer.
        The VPN client serves as an endpoint for an IPsec VPN connection and performs a number of
        cryptographic functions related to establishing and maintaining that connection. If the cryptography
        used to perform endpoint authentication, generate keys, and encrypt information is sufficiently robust
        and the implementation has no critical design mistakes, an adversary will be unable to exhaust the
        encryption key space to obtain the data. Compliance with IPsec standards, use of a properly seeded
        Random Bit Generator (RBG), and secure authentication factors will ensure that access to the
        transmitted information cannot be obtained with less work than a full exhaust of the key space. Any
        plaintext secret and private keys or other cryptographic security parameters will be zeroized when no
        longer in use to prevent disclosure of security critical data.

      </subsection>
    </section>
    <section title="Use Cases" id="usecases">
      A VPN client allows users on the TOE platform to establish secure IPsec communications, providing
      confidentiality, integrity, and protection of data, across a less trusted network in order to secure data in
      transit. This PP-Module defines three use cases for VPN clients. A conformant TOE will implement one or
      more of the use cases specified below.<h:p/>
      
      Regardless of the specific usage of the TOE, the focus of the Security Functional Requirements in this PPModule is on the following fundamental aspects of a VPN client:
      <h:ul>
        <h:li>authentication of the IPsec peer</h:li>
        <h:li>cryptographic protection of data in transit</h:li>
        <h:li>implementation of services</h:li>
      </h:ul>
      
      A VPN client can establish VPN connectivity either to a VPN gateway with traffic bound for a remote
      endpoint in the private network that is protected by the VPN gateway (Use Case 1), to a VPN client peer
      residing on a remote endpoint in the same network as the TOE (Use Case 2), and/or to a network device
      with IPsec capability for the purposes of managing that device (Use Case 3). In the first case, the entire
      IP packet is encapsulated and a new header is applied so that the gateway can route the packet to its
      intended destination. This is known as tunnel mode. In the latter two cases, the original IP header is
      preserved and only the payload is encrypted. This is known as transport mode.<h:p/>
      
      Beyond the implementation differences specified by these use cases, the remaining security
      functionality is expected to be implemented by all VPN clients, regardless of whether it supports one or
      more of the use cases. Regardless of the intended use case, VPN endpoints authenticate each other to
      ensure they are communicating with an authorized external IT entity. Authentication of IPsec peers is
      performed as part of the Internet Key Exchange (IKE) negotiation. The IKE negotiation uses a pre-existing
      public key infrastructure for authentication and can optionally use a pre-shared key. When IKE
      completes, an IPsec tunnel secured with Encapsulating Security Payload (ESP) is established.<h:p/>
      
      It is assumed that the VPN client is implemented properly and contains no critical design mistakes. The
      VPN client relies on the system or device on which it is installed for its proper execution. The vendor is
      required to provide configuration guidance (AGD_PRE, AGD_OPE) to correctly install and administer the
      client machine and the TOE for every operational environment supported.
      
      <usecases>
        <usecase id="usecase1" title="TOE to VPN Gateway">
          <description>A VPN client allows users on the TOE platform to establish an encrypted IPsec tunnel across a
            less trusted, often unprotected public, network to a private network (see Figure 1). In this case,
            the TOE provides encryption/decryption of network packets as they leave/arrive the VPN client’s
            underlying platform. IP packets crossing from the private network to the public network will be
            encrypted if their destination is a remote access VPN client supporting the same VPN policy as
            the source network.<h:p/>
            The TOE is responsible for encrypting the packets that are intended to be received by the target
            on the private network and then encapsulating these packets in a way that allows the VPN
            gateway to securely receive them and forward them to their final destination.
            <figure entity="images/usecase1.jpg" title="TOE to VPN Gateway" id="usecase1"/>
          </description>
        </usecase>
        
          <usecase id="usecase2" title="TOE to VPN Client">
            <description>A VPN client may additionally or alternatively allow a client computer to connect directly to
              another computer running a VPN client (see Figure 2). In this case, the functionality of the VPN
              client is to connect directly to another endpoint system in order to facilitate communications
              directly to that system.<h:p/>
              IPsec transport mode is used for end-to-end communications. In this use case, the content of
              the packet data (payload) is encrypted but the original IP header is preserved. Inherent to this
              use case, when two peers are communicating directly, is the disclosure of the
              source/destination of the packets. Users should take into consideration any security risks
              associated with this disclosure when architecting their networks in line with this use case.
              
              <figure entity="images/usecase2.jpg" title="TOE to VPN Client" id="usecase2"/>
            </description>
          </usecase>
        
        <usecase id="usecase3" title="TOE to IPsec-capable Network Device">
          <description>Similar to Use Case 2 above, a VPN client TOE can also be used to establish a secure connection
            to an IPsec-capable network device using IPsec, similar to how SSH can be used. In this case,
            where a network device is being managed remotely over an IPsec connection, the network
            device itself must contain IPsec functionality to act as the peer for the connection (see Figure 3).<h:p/>
            
            While this will behave functionally the same way as the scenario described by Use Case 2, the
            user of the TOE in Use Case 3 is a network administrator who is assumed to have administrative
            access to the network device they are connecting to.
            
            <figure entity="images/usecase3.jpg" title="TOE to IPsec-capable Network Device" id="usecase3"/>
          </description>
        </usecase>
       
        
      </usecases>
    </section>
  </chapter>
  <chapter title="Conformance Claims" id="ConformanceClaims">
    <cclaims>
      <cclaim title="Conformance Statement">
        <description> This PP-Module inherits exact conformance as required from the specified
          Base-PP and as defined in the CC and CEM addenda for Exact Conformance, Selection-Based
          SFRs, and Optional SFRs (dated May 2017).<h:br/><h:br/> The following PPs and PP-Modules
          are allowed to be specified in a PP-Configuration with this PP-Module. <h:ul>
            <h:li>Network Device cPP, version 2.1</h:li>
          </h:ul>
        </description>
      </cclaim>
      <cclaim title="CC Conformance Claims">
        <description>This PP-Module is conformant to Parts 2 (extended) and 3 (conformant) of Common
          Criteria Version 3.1, Release 5 [CC]. </description>
      </cclaim>
      <cclaim title="Package Claims">
        <description><!-- NIAP: Does this module need to claim any packages? -->
          <!-- If YES: This PP-Module is <package name> Conformant. --> This PP-Module does not
          claim conformance to any packages.</description>
      </cclaim>
    </cclaims>
  </chapter>
  <chapter title="Security Problem Description" id="spd">  
    The security problem is described in terms of the threats that the TOE is expected to address,
    assumptions about its operational environment, and any organizational security policies that the TOE is
    expected to enforce.<h:p/>
    This PP-Module is written to address the situation in which a user accesses a private network (e.g. the
    user’s office network) or terminal endpoint (e.g. a network device) using a less trusted network (such as
    a public Wi-Fi network or local-area network). Protection of network packets is desired as they traverse
    a public network. To protect the data in-transit from disclosure and modification, a VPN is created to
    establish secure communications. The VPN client provides one end of the secure VPN tunnel and
    performs encryption and decryption of network packets in accordance with a VPN security policy
    negotiated between the VPN client (TOE) and its IPsec peer.<h:p/>
    The proper installation and configuration of the VPN client is critical to its correct operation such that
    proper handling of the TOE by an administrator is also addressed.<h:p/>
    Note that as a PP-Module, all threats, assumptions, and OSPs defined in the Base-PP will also apply to a
    TOE unless otherwise specified, depending on which of the Base-PPs it extends. The Security Functional
    Requirements defined in this PP-Module will mitigate the threats that are defined in the PP-Module but
    may also mitigate some threats defined in the Base-PPs in more comprehensive detail due to the
    specific capabilities provided by a VPN client.
    <section title="Threats" id="threats">
      <threats>
        <threat id="T.UNAUTHORIZED_ACCESS">
          <description>This PP-Module does not include requirements that can protect against an insider threat.
            Authorized users are not considered hostile or malicious and are trusted to follow appropriate
            guidance. Only authorized personnel should have access to the system or device that contains
            the IPsec VPN client. Therefore, the primary threat agents are the unauthorized entities that try
            to gain access to the protected network (in cases where tunnel mode is used) or to plaintext
            data that traverses the public network (regardless of whether transport mode or tunnel mode is
            used). <h:p/>
            
            The endpoint of the network communication can be both geographically and logically distant
            from the TOE, and can pass through a variety of other systems. These intermediate systems may
            be under the control of the adversary, and offer an opportunity for communications over the
            network to be compromised.<h:p/>
            
            Plaintext communication over the network may allow critical data (such as passwords,
            configuration settings, and user data) to be read and/or manipulated directly by intermediate
            systems, leading to a compromise of the TOE or to the secured environmental system(s) that the
            TOE is being used to facilitate communications with. IPsec can be used to provide protection for
            this communication; however, there are myriad options that can be implemented for the
            protocol to be compliant to the protocol specification listed in the RFC. Some of these options
            can have negative impacts on the security of the connection. For instance, using a weak
            encryption algorithm (even one that is allowed by the RFC, such as DES) can allow an adversary 
            to read and even manipulate the data on the encrypted channel, thus circumventing
            countermeasures in place to prevent such attacks. Further, if the protocol is implemented with
            little-used or non-standard options, it may be compliant with the protocol specification but will
            not be able to interact with other, diverse equipment that is typically found in large enterprises.<h:p/>
            
            Even though the communication path is protected, there is a possibility that the IPsec peer
            could be duped into thinking that a malicious third-party user or system is the TOE. For instance,
            a middleman could intercept a connection request to the TOE, and respond to the request as if
            it were the TOE. In a similar manner, the TOE could also be duped into thinking that it is
            establishing communications with a legitimate IPsec peer when in fact it is not. An attacker
            could also mount a malicious man-in-the-middle-type of attack, in which an intermediate
            system is compromised, and the traffic is proxied, examined, and modified by this system. This
            attack can even be mounted via encrypted communication channels if appropriate
            countermeasures are not applied. These attacks are, in part, enabled by a malicious attacker
            capturing network traffic (for instance, an authentication session) and “playing back” that traffic
            in order to fool an endpoint into thinking it was communicating with a legitimate remote entity.</description>
          <objective-refer ref="O.PLACEHOLDER">
            <rationale>PLACEHOLDER</rationale>
          </objective-refer>  
          
          <!-- 
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.Unauthorized_Disclosure_of_Information is countered by
              O.SYSTEM_MONITORING as this provides for visibility into the network which enables
              detection of network violations.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIDS_ANALYZE">
            <rationale>The threat T.Unauthorized_Disclosure_of_Information is countered by
              O.WIDS_ANALYZE as this provides detection of potential violations of approved network
              usage.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIPS_REACT">
            <rationale>The threat T.Unauthorized_Disclosure_of_Information is countered by
              O.WIPS_REACT as this provides containment of unauthorized APs and EUDs.</rationale>
          </objective-refer>    --> 
        </threat>
        <threat id="T.TSF_CONFIGURATION">
          <description> Configuring VPN tunnels is a complex and time-consuming process, and prone to errors if the
            interface for doing so is not well-specified or well-behaved. The inability to configure certain
            aspects of the interface may also lead to the mis-specification of the desired communications
            policy or use of cryptography that may be desired or required for a particular site. This may
            result in unintended weak or plaintext communications while the user thinks that their data are
            being protected. Other aspects of configuring the TOE or using its security mechanisms (for
            example, the update process) may also result in a reduction in the trustworthiness of the VPN
            client.</description>
          <objective-refer ref="O.PLACEHOLDER">
            <rationale>PLACEHOLDER</rationale>
          </objective-refer>  
          <!-- 
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.UNAUTHORIZED_ACCESS is countered by O.SYSTEM_MONITORING as this
              provides for visibility into the network which enables detection of unauthorized APs
              and EUDs.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIDS_ANALYZE">
            <rationale>The threat T.UNAUTHORIZED_ACCESS is countered by O.WIDS_ANALYZE as this
              provides detection of potential violations of approved network usage.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIPS_REACT">
            <rationale>The threat T.UNAUTHORIZED_ACCESS is countered by O.WIPS_REACT as this
              provides containment of unauthorized APs and EUDs.</rationale>
          </objective-refer>
          <objective-refer ref="O.TOE_ADMINISTRATION">
            <rationale>The threat T.UNAUTHORIZED_ACCESS is countered by
              O.TOE_ADMINISTRATION.</rationale>
          </objective-refer> -->
        </threat>
        <threat id="T.UNAUTHORIZED_UPDATE">
          <description> Since the most common attack vector used involves attacking unpatched versions of software
            containing well-known flaws, updating the VPN client is necessary to ensure that changes to
            threat environment are addressed. Timely application of patches ensures that the client is a
            “hard target”, thus increasing the likelihood that product will be able to maintain and enforce its
            security policy. However, the updates to be applied to the product must be trustable in some
            manner; otherwise, an attacker can write their own “update” that instead contains malicious
            code of their choosing, such as a rootkit, bot, or other malware. Once this “update” is installed,
            the attacker then has control of the system and all of its data.<h:p/>
            
            Methods of countering this threat typically involve hashes of the updates, and potentially
            cryptographic operations (e.g., digital signatures) on those hashes as well. However, the validity
            of these methods introduces additional threats. For instance, a weak hash function could result
            in the attacker being able to modify the legitimate update in such a way that the hash remained
            unchanged. For cryptographic signature schemes, there are dependencies on 
            
            <h:ul>
              <h:li>the strength of the cryptographic algorithm used to provide the signature, and </h:li>
              <h:li>the ability of the end user to verify the signature, which typically involves checking a
                hierarchy of digital signatures back to a root of trust (a certificate authority).</h:li>
            </h:ul>
            
            If a cryptographic signature scheme is weak, then it may be compromised by an attacker and the
            end user will install a malicious update, thinking that it is legitimate. Similarly, if the root of trust
            can be compromised, then a strong digital signature algorithm will not stop the malicious
            update from being installed. In this case, the attacker will just create their own signature on the update
            using the compromised root of trust, and the malicious update will then be installed without
            detection.
          </description>
          <objective-refer ref="O.PLACEHOLDER">
            <rationale>PLACEHOLDER</rationale>
          </objective-refer>  
          
          <!-- 
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.DISRUPTION is countered by O.SYSTEM_MONITORING as this provides
              for visibility into the network which enables detection of DoS attacks.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIDS_ANALYZE">
            <rationale>The threat T.DISRUPTION is countered by O.WIDS_ANALYZE as this provides for
              detection of potential violations of approved network usage.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIPS_REACT">
            <rationale>The threat T.DISRUPTION is countered by O.WIPS_REACT as this provides
              containment of unauthorized APs and EUDs.</rationale>
          </objective-refer>  -->
        </threat>
        
        <threat id="T.USER_DATA_REUSE">
          <description>Data traversing the TOE could inadvertently be sent to a different user; since these data may be
            sensitive, this may cause a compromise that is unacceptable. The specific threat that must be
            addressed concerns user data that is retained by the TOE in the course of processing network
            traffic that could be inadvertently re-used in sending network traffic to a user other than that
            intended by the sender of the original network traffic. 
          </description>
          <objective-refer ref="O.PLACEHOLDER">
            <rationale>PLACEHOLDER</rationale>
          </objective-refer>  
          
          <!-- 
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.DISRUPTION is countered by O.SYSTEM_MONITORING as this provides
              for visibility into the network which enables detection of DoS attacks.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIDS_ANALYZE">
            <rationale>The threat T.DISRUPTION is countered by O.WIDS_ANALYZE as this provides for
              detection of potential violations of approved network usage.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIPS_REACT">
            <rationale>The threat T.DISRUPTION is countered by O.WIPS_REACT as this provides
              containment of unauthorized APs and EUDs.</rationale>
          </objective-refer>  -->
        </threat>
        
        <threat id="T.TSF_FAILURE">
          <description> Security mechanisms of the TOE generally build up from a primitive set of mechanisms (e.g.,
            memory management, privileged modes of process execution) to more complex sets of
            mechanisms. Failure of the primitive mechanisms could lead to a compromise in more complex
            mechanisms, resulting in a compromise of the TSF.
          </description>
          <objective-refer ref="O.PLACEHOLDER">
            <rationale>PLACEHOLDER</rationale>
          </objective-refer>  
          <!-- 
          <objective-refer ref="O.SYSTEM_MONITORING">
            <rationale>The threat T.DISRUPTION is countered by O.SYSTEM_MONITORING as this provides
              for visibility into the network which enables detection of DoS attacks.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIDS_ANALYZE">
            <rationale>The threat T.DISRUPTION is countered by O.WIDS_ANALYZE as this provides for
              detection of potential violations of approved network usage.</rationale>
          </objective-refer>
          <objective-refer ref="O.WIPS_REACT">
            <rationale>The threat T.DISRUPTION is countered by O.WIPS_REACT as this provides
              containment of unauthorized APs and EUDs.</rationale>
          </objective-refer>  -->
        </threat>
        
        
      </threats>
    </section>
    <section title="Assumptions" id="assumption">
      <assumptions>
        <assumption id="A.NO_TOE_BYPASS">
          <description> Information cannot flow onto the network to which the VPN client's host is connected without
            passing through the TOE.
          </description>
          <objective-refer ref="OE.NO_TOE_BYPASS">
            <rationale> The operational environment objective OE.NO_TOE_BYPASS is realized through
              A.NO_TOE_BYPASS.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is assumed
            to be provided by the environment.
          </description>
          <objective-refer ref="OE.PHYSICAL">
            <rationale> The operational environment objective OE.PHYSICAL is realized through
              A.PHYSICAL.</rationale>
          </objective-refer>
        </assumption>
        <assumption id="A.TRUSTED_CONFIG">
          <description> Personnel configuring the TOE and its operational environment will follow the applicable
            security configuration guidance. </description>
          <objective-refer ref="OE.TRUSTED_CONFIG">
            <rationale> The operational environment objective A.TRUSTED_CONFIG is realized through
              OE.TRUSTED_CONFIG.</rationale>
          </objective-refer>
        </assumption>
      </assumptions>
    </section>
    <section title="Organizational Security Policies" id="osp"> This PP-Module defines no additional organizational security policies beyond those defined in the supported Base-PPs.
    </section>
  </chapter>
  <chapter title="Security Objectives" id="obj">
    <section title="Security Objectives for the TOE" id="SecurityObjectivesTOE">
      <SOs> 
        <SO id="O.PLACEHOLDER">
          <description>PLACEHOLDER OBJECTIVE.<h:br/>
          </description>
          <addressed-by>fcs_ipsec_ext.1</addressed-by>
          <consistency-rationale/>
        </SO>
      </SOs> 
    </section>
    <section title="Security Objectives for the Operational Environment" id="SecurityObjectivesTOEorEnvironment"> 
      The Operational Environment of the TOE implements technical and procedural measures to assist the
      TOE in correctly providing its security functionality (which is defined by the security objectives for the
      TOE). This section defines the security objectives that are to be addressed by the IT domain or by nontechnical or procedural means. As indicated above, if requirements supporting an objective on the TOE
      (in the previous table) are implemented in whole or in part by the platform, the ST should indicate this
      by an entry in this table with that objective.
      <SOEs>
        <SOE id="OE.NO_TOE_BYPASS">
          <description> Information cannot flow onto the network to which the VPN client's host is connected without
            passing through the TOE.
          </description>
          <consistency-rationale/>
        </SOE>
        <SOE id="OE.PHYSICAL">
          <description>Physical security, commensurate with the value of the TOE and the data it contains, is assumed
            to be provided by the environment.</description>
          <consistency-rationale/>
        </SOE>
        <SOE id="OE.TRUSTED_CONFIG">
          <description>Personnel configuring the TOE and its operational environment will follow the applicable
            security configuration guidance.
          </description>
          <consistency-rationale/>
        </SOE>
      </SOEs>
    </section>
    <section title="Security Objectives Rationale" id="SOR">
      <!-- NOTE: This section should remain empty and is populated from the rationale tags in the previous sections.  -->
    </section>
  </chapter>
  <chapter title="Security Requirements" id="sfrs">
    <base-pp version="4.2.1" name="General Purpose Operating System" product="General Purpose Operating System" short="GPOS" url="https://www.niap-ccevs.org/Profile/Info.cfm?PPID=442" xmlurl="test">
      <modified-sfrs>
        <subsection title="Cryptographic Support (FCS)" id="fcs">
          <f-component id="fcs_ckm.1" name="Cryptographic Key Generation">
            <consistency-rationale/>
            <f-element>
              <title>The OS shall generate generate asymmetric cryptographic keys in accordance with a specified cryptographic key generation algorithm: <h:b>
                
                <h:ul>
                  <h:li>ECC schemes using “NIST curves” P-256, P-384, and <selectables>
                    <selectable>P-521</selectable>
                    <selectable>no other curves</selectable>
                  </selectables>
                    that meet the following: FIPS PUB 186-4, “Digital Signature
                    Standard (DSS)”, Appendix B.4,</h:li>
                  <h:li>FFC schemes using cryptographic key sizes of 2048-bit or greater that meet
                    the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
                    Appendix B.1,
                  </h:li>
                </h:ul>
                </h:b>
                
                <selectables linebreak="yes">
                  <selectable>RSA schemes using cryptographic key sizes of 2048-bit or greater that meet
                    the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
                    Appendix B.3;
                  </selectable>
                  <selectable><h:b>No other key generation methods</h:b></selectable>
                </selectables>.
                </title>

              <note role="application">
                This SFR is functionally identical to what is defined in the GPOS PP except that
                FFC and ECC key generation have been made mandatory in support of IPsec due
                to the mandated support for DH groups 14, 19, and 20 in FCS_IPSEC_EXT.1.8.
                RSA remains present as a selection since it may be used by parts of the TSF
                that are not specifically related to VPN client functionality.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FCS_CKM.1 in the GPOS PP for evaluating this SFR.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_ckm.2" name="Cryptographic Key Establishment">
            <consistency-rationale/>
            <f-element>
              <title>The OS shall implement functionality to perform cryptographic key
                establishment in accordance with a specified key establishment method:
                
                
                <h:ul>
                  <h:li>RSA-based key establishment schemes that meets the following: NIST
                    Special Publication 800-56B, “Recommendation for Pair-Wise Key
                    Establishment Schemes using Integer Factorization Cryptography”,</h:li>
                  <h:li><h:b>Elliptic curve-based key establishment schemes that meets the following:
                    NIST Special Publication 800-56A, “Recommendation for Pair-Wise Key
                    Establishment Schemes Using Discrete Logarithm Cryptography”,</h:b>
                  </h:li>
                </h:ul>
              
                
                <selectables linebreak="yes">
                  <selectable>Finite field-based key establishment schemes that meets the following: NIST
                    Special Publication 800-56A, “Recommendation for Pair-Wise Key
                    Establishment Schemes Using Discrete Logarithm Cryptography”, 
                  </selectable>
                  <selectable><h:b>Key establishment scheme using Diffie-Hellman group 14 that meets the
                    following: RFC 3526, Section 3</h:b></selectable>
                </selectables>.
              </title>
              
              <note role="application">
                This SFR differs from its definition in the GPOS PP by moving elliptic curve-based
                key establishment schemes from selectable to mandatory (due to the mandated
                support for DH groups 19 and 20 in FCS_IPSEC_EXT.1.8). It also provides the
                ability to claim either NIST SP 800-56A or RFC 3526 for key establishment using
                finite field cryptography. One of these two claims must be made in support of DH
                group 14 in FCS_IPSEC_EXT.1.8. The use of RSA is not explicitly mandated by the
                VPN client but it is mandatory in the GPOS PP as a prerequisite to implementing
                TLS, which is why it remains mandatory here.
              </note>
              <aactivity>               
                For all key establishment schemes that conform to NIST SP 800-56A or 800-56B, refer to the
                Assurance Activity for FCS_CKM.2 in the GPOS PP.<h:p/>
                If “Key establishment scheme using Diffie-Hellman group 14…” is selected, the evaluator shall ensure
                that the TSS describes how the implementation meets RFC 3526 Section 3. The evaluator shall also
                verify the correctness of the TSF’s implementation of Diffie-Hellman group 14 by using a known good
                implementation for each protocol selected in FTP_ITC_EXT.1 and FTP_TRP.1 in the GPOS PP that
                uses Diffie-Hellman group 14. Note that because a TOE that conforms to this PP-Module must
                implement IPsec, the tested protocols shall include IPsec at minimum.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_cop.1(1)" name="Cryptographic Operation (Encryption and Decryption)">
            <consistency-rationale/>
            <f-element>
              <title>The OS shall perform encryption/decryption services for data in accordance with
                a specified cryptographic algorithm
                <h:ul>
                  <h:li>AES-XTS (as defined in NIST SP 800-38E),</h:li>
                  <h:li>AES-CBC (as defined in NIST SP 800-38A),</h:li>
                  <h:li><h:b>AES-GCM (as defined in NIST SP 800-38D),</h:b></h:li>
                </h:ul>
                
                and <selectables linebreak="yes">
                  <selectable>AES-CCMP (as defined in FIPS PUB 197, NIST SP 800-38C and IEEE
                    802.11-2012),</selectable>
                  <selectable>AES Key Wrap (KW) (as defined in NIST SP 800-38F),</selectable>
                  <selectable>AES Key Wrap with Padding (KWP) (as defined in NIST SP 800-38F),</selectable>
                  <selectable>AES-CCM (as defined in NIST SP 800-38C),</selectable>
                  <selectable>AES-CCMP-256 (as defined in NIST SP800-38C and IEEE 802.11ac-2013),</selectable>
                  <selectable>AES-GCMP-256 (as defined in NIST SP800-38D and IEEE 802.11ac-2013),</selectable>
                  <selectable>no other modes</selectable>
                  
                </selectables>
                and cryptographic key sizes [<h:i>128-bit, 256-bit</h:i>].
              </title>
              
              <note role="application">
                This SFR is identical to what is defined in the GPOS PP except that support for
                GCM mode is mandatory in order to address the requirements for
                FCS_IPSEC_EXT.1. In addition, both 128-bit and 256-bit for key sizes must be
                selected in order to meet the requirements for FCS_IPSEC_EXT.1.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FCS_COP.1(1) in the GPOS PP for evaluating this SFR.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
      </modified-sfrs>
      <additional-sfrs>
        
        <subsection title="Cryptographic Support (FCS)" id="fcs">
          <f-component id="fcs_ckm.1/VPN" name="Cryptographic Key Generation (IKE)">
            <consistency-rationale/>
            <f-element>
              <title>The <h:b><selectables>
                <selectable>VPN client</selectable>
                <selectable>OS</selectable>
              </selectables></h:b>
                
                shall generate asymmetric cryptographic keys used for IKE peer authentication in accordance with: <h:b>
                
                <selectables linebreak="yes">
                  <selectable>FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.3 for RSA
                    schemes;
                  </selectable>
                  <selectable>FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.4 for
                    ECDSA schemes and implementing “NIST curves”, P-256, P-384, and <selectables>
                      <selectable>P-521</selectable>
                      <selectable>no other curves</selectable>
                    </selectables>
                  </selectable>
                </selectables>
                </h:b>
                  
                  and specified cryptographic key sizes <h:b>equivalent to, or greater than, a
                    symmetric key strength of 112 bits</h:b>.
      
              </title>
              
              <note role="application">
                The keys that are required to be generated by the TOE through this requirement
                are intended to be used for the authentication of the VPN entities during the IKE
                (either v1 or v2) key exchange. While it is required that the public key be
                associated with an identity in an X.509v3 certificate, this association is not
                required to be performed by the TOE, and instead is expected to be performed by
                a Certificate Authority in the Operational Environment. <h:p/>
                
                As indicated in FCS_IPSEC_EXT.1, the TOE is required to implement support for
                RSA or ECDSA (or both) for authentication.<h:p/>
                
                See NIST Special Publication 800-57, “Recommendation for Key Management”
                for information about equivalent key strengths.
                
              </note>
              <aactivity>               
                <TSS>The evaluator shall examine the TSS to verify that it describes how the key generation functionality is
                  invoked.</TSS>
                <Guidance>There are no guidance evaluation activities for this component.</Guidance>
                <no-tests/>
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_ckm_ext.2" name="Cryptographic Key Storage">
            <consistency-rationale/>
            <f-element>
              <title>The <selectables>
                <selectable>VPN client</selectable>
                <selectable>OS</selectable>
              </selectables> shall store persistent secrets and private keys
                when not in use in OS-provided key storage.
              </title>
              <note role="application">
                This requirement ensures that persistent secrets (credentials, secret keys) and
                private keys are stored securely when not in use. If some secrets/keys are
                manipulated by the VPN client and others are manipulated by the OS, then both
                of the selections can be specified by the ST author.
              </note>
              <aactivity>               
                <TSS>Regardless of whether this requirement is met by the VPN client or the OS, the evaluator will check
                  the TSS to ensure that it lists each persistent secret (credential, secret key) and private key needed
                  to meet the requirements in the ST. For each of these items, the evaluator will confirm that the TSS
                  lists for what purpose it is used, and how it is stored. </TSS>
                <Guidance>There are no guidance evaluation activities for this component</Guidance>
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
        
        <subsection title="Identification and Authentication (FIA)" id="fia">
          <f-component id="fia_x509_ext.3" name="X.509 Certificate Use and Management">
            <consistency-rationale/>
            <f-element>
              <title>The TSF shall use X.509v3 certificates as defined by RFC 5280 to support
              authentication for IPsec exchanges, and <selectables>
                <selectable>digital signatures for FPT_TUD_EXT.1</selectable>
                <selectable>integrity checks for FPT_TST_EXT.1</selectable>
                <selectable>no additional uses</selectable>
              </selectables>
              </title>
            </f-element>
              <f-element>
                <title>
                  When a connection to determine the validity of a certificate cannot be
                  established, the <selectables>
                    <selectable>VPN client</selectable>
                    <selectable>OS</selectable>
                  </selectables> shall <selectables>
                    <selectable>allow the administrator to choose whether to accept the certificate in these cases</selectable>
                    <selectable>accept the certificate</selectable>
                    <selectable>not accept the certificate</selectable>
                  </selectables>
                </title>
                  <note role="application">
                    Oftentimes a connection must be established to perform a verification of the
                    revocation status of a certificate - either to download a CRL or to perform OCSP.
                    The selection is used to describe the behavior in the event that such a connection 
                    cannot be established (for example, due to a network error). The behavior of the
                    TOE in these cases is described by the second selection. If the TOE has
                    determined the certificate valid according to all other rules in FIA_X509_EXT.1,
                    the behavior indicated in the second selection shall determine the validity. The
                    TOE must not accept the certificate if it fails any of the other validation rules in
                    FIA_X509_EXT.1. If the administrator-configured option is selected by the ST
                    Author, the ST Author must also make the appropriate selection in
                    FMT_SMF.1/VPN.  
                  </note>
              </f-element>
            <f-element>
              <title>
                The <selectables>
                  <selectable>VPN client</selectable>
                  <selectable>OS</selectable>
                </selectables> shall not establish an SA if a certificate or
                certificate path is deemed invalid.
              </title>

              <aactivity>  
                The evaluation activities below apply to FIA_X509_EXT.3.2. FIA_X509_EXT.3.1 is evaluated as part of
                FCS_IPSEC_EXT.1 (and conditionally as part of FPT_TUD_EXT.1 and/or FPT_TST_EXT.1) and
                FIA_X509_EXT.3.3 is evaluated as part of FCS_IPSEC_EXT.1.11.
                <TSS>The evaluator shall check the TSS to ensure that it describes whether the VPN client or the OS
                  implements the certificate validation functionality, how the VPN client/OS chooses which certificates 
                  to use, and any necessary instructions in the administrative guidance for configuring the OS so that
                  desired certificates can be used.<h:p/>
                  
                  The evaluator shall examine the TSS to confirm that it describes the behavior of the client/OS when a
                  connection cannot be established during the validity check of a certificate used in establishing a
                  trusted channel.
                </TSS>
                <Guidance>If the requirement that the administrator is able to specify the default action, then the evaluator
                  shall ensure that the operational guidance contains instructions on how this configuration action is
                  performed.</Guidance>
                <Tests>
                  The evaluator shall perform the following test regardless of whether the certificate validation
                  functionality is implemented by the VPN client or by the OS:
                  <testlist>
                  <test>The evaluator shall demonstrate that using a valid certificate that requires certificate
                  validation checking to be performed in at least some part by communicating with a non-TOE IT
                  entity. The evaluator shall then manipulate the environment so that the TOE is unable to verify the
                  validity of the certificate, and observe that the action selected in FIA_X509_EXT.3.2 is performed. If
                  the selected action is administrator-configurable, then the evaluator shall follow the operational
                  guidance to determine that all supported administrator-configurable options behave in their
                  documented manner.</test>
                  </testlist>
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
        
        <subsection title="Trusted Path/Channels (FTP)" id="ftp">
          <f-component id="ftp_itc.1" name="Inter-TSF Trusted Channel">
            <consistency-rationale/>
            <f-element>
              <title>
                The <selectables>
                  <selectable>VPN client</selectable>
                  <selectable>OS</selectable>
                </selectables> 
                shall use IPsec to provide a trusted
                communication channel between itself and <h:b><selectables>
                  <selectable>a remote VPN gateway</selectable>
                  <selectable>a remote VPN client</selectable>
                  <selectable>a remote IPsec-capable network device</selectable>
                </selectables></h:b> that is logically
                distinct from other communication channels and provides assured identification
                of its end points and protection of the channel data <h:b>from disclosure and
                  detection of modification of the channel data</h:b>.
              </title>
            </f-element>
            <f-element>
              <title>
                The <selectables>
                  <selectable>VPN client</selectable>
                  <selectable>OS</selectable>
                </selectables> shall permit [<h:i>the TSF</h:i>] to initiate communiaction with the trusted channel.
              </title>
            </f-element>
            <f-element>
              <title>
                The <selectables>
                  <selectable>VPN client</selectable>
                  <selectable>OS</selectable>
                </selectables> shall initiate communication via the trusted
                channel [<h:i>for all traffic traversing that connection</h:i>].
              </title>
              <note role="application">
                The intent of the above requirement is to demonstrate that IPsec can be used to
                establish remote communications in transport and/or tunnel mode.<h:p/>
                The requirement implies that not only are communications protected when they
                are initially established, but also on resumption after an outage. It may be the
                case that some part of the TOE setup involves manually setting up tunnels to
                protect other communication, and if after an outage the TOE attempts to reestablish the communication automatically with (the necessary) manual
                intervention, there may be a window created where an attacker might be able to
                gain critical information or compromise a connection. 
              </note>
              
              <aactivity>  
                <TSS>The evaluator shall examine the TSS to determine that it describes the details of the TOE connecting
                  to a VPN gateway and/or VPN client and/or IPsec-capable network device in terms of the
                  cryptographic protocols specified in the requirement, along with TOE-specific options or procedures
                  that might not be reflected in the specification. The evaluator shall also confirm that all protocols
                  listed in the TSS are specified and included in the requirements in the ST.
                </TSS>
                <Guidance>The evaluator shall confirm that the operational guidance contains instructions for establishing the
                  connection to a VPN gateway and/or VPN client and/or IPsec-capable network device, and that it
                  contains recovery instructions should a connection be unintentionally broken.</Guidance>
                <Tests>
                  The evaluator shall perform the following tests:
                  <testlist>
                    <test>The evaluator shall ensure that the TOE is able to initiate communications with a VPN
                      gateway and/or VPN client and/or IPsec-capable network device using the protocols specified in the
                      requirement, setting up the connections as described in the operational guidance and ensuring that
                      communication is successful.</test>
                    <test>The evaluator shall ensure, for each communication channel with an IPsec peer, the channel
                      data is not sent in plaintext.
                    </test>
                    <test>The evaluator shall ensure, for each communication channel with an IPsec peer, modification
                      of the channel data is detected by the TOE.</test>
                    <test>The evaluator shall physically interrupt the connection from the TOE to the IPsec peer. The
                      evaluators shall ensure that subsequent communications are appropriately protected, at a minimum
                      in the case of any attempts to automatically resume the connection or connect to a new access
                      point.</test>
                  </testlist>
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
        
      </additional-sfrs>
      <con-toe> 
  <!--      When this PP-Module extends the Network Device cPP, the TOE type for the overall TOE is still WIDS/WIPS products. --></con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>
    </base-pp>


    <base-pp version="3.1" name="Mobile Device Fundamentals" product="Mobile Device" short="MDF" url="https://www.niap-ccevs.org/Profile/Info.cfm?PPID=417" xmlurl="test">
      <modified-sfrs>
        <subsection title="Cryptographic Support (FCS)" id="fcs">
          <f-component id="fcs_ckm.1" name="Cryptographic Key Generation">
            <consistency-rationale/>
            <f-element>
              <title>The TSF shall generate generate asymmetric cryptographic keys in accordance with a specified cryptographic key generation algorithm: <h:b>
                
                
                <h:ul>
                  <h:li>ECC schemes <selectables linebreak="yes">
                    <selectable>
                    using “NIST curves” P-256, P-384, and <selectables>
                    <selectable>P-521</selectable>
                    <selectable>no other curves</selectable>
                    </selectables>that meet the following: FIPS PUB 186-4, “Digital Signature
                      Standard (DSS)”, Appendix B.4,
                    </selectable>
                    <selectable>Curve25519 schemes that meet the following: RFC 7748</selectable>
                  </selectables>
                  </h:li>
                  <h:li>FFC schemes using cryptographic key sizes of 2048-bit or greater that meet
                    the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
                    Appendix B.1,
                  </h:li>
                </h:ul>
                </h:b>
                
                <selectables linebreak="yes">
                  <selectable>RSA schemes using cryptographic key sizes of 2048-bit or greater that meet
                    the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
                    Appendix B.3;
                  </selectable>
                  <selectable><h:b>No other key generation methods</h:b></selectable>
                </selectables>.
                </title>

              <note role="application">
                This SFR is functionally identical to what is defined in the MDF PP except that FFC
                and ECC key generation have been made mandatory in support of IPsec due to
                the mandated support for DH groups 14, 19, and 20 in FCS_IPSEC_EXT.1.8, and
                support for P-256 is made mandatory due to its use in DH group 19. Curve25519
                schemes are included to satisfy FDP_DAR_EXT.2.2 in the MDF PP; these schemes
                are not used in support of IPsec. RSA remains present as a selection since it may be used by parts of the TSF
                that are not specifically related to VPN client functionality.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FCS_CKM.1 in the MDF PP for evaluating this SFR.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_ckm.2(1)" name="Cryptographic Key Establishment">
            <consistency-rationale/>
            <f-element>
              <title>The TSF shall perform cryptographic key
                establishment in accordance with a specified key establishment method: 
                
                
                <h:ul>
                  <h:li>RSA-based key establishment schemes that meets the following: NIST
                    Special Publication 800-56B, “Recommendation for Pair-Wise Key
                    Establishment Schemes using Integer Factorization Cryptography”,</h:li>
                  <h:li><h:b>Elliptic curve-based key establishment schemes that meets the following:
                    NIST Special Publication 800-56A, “Recommendation for Pair-Wise Key
                    Establishment Schemes Using Discrete Logarithm Cryptography”</h:b>
                  </h:li>
                </h:ul>
              
                
                <selectables linebreak="yes">
                  <selectable>Finite field-based key establishment schemes that meets the following: NIST
                    Special Publication 800-56A, “Recommendation for Pair-Wise Key
                    Establishment Schemes Using Discrete Logarithm Cryptography”, 
                  </selectable>
                  <selectable><h:b>Key establishment scheme using Diffie-Hellman group 14 that meets the
                    following: RFC 3526, Section 3</h:b></selectable>
                </selectables>.
              </title>
              
              <note role="application">
                This SFR differs from its definition in the MDF PP by moving elliptic curve-based
                key establishment schemes from selectable to mandatory (due to the mandated
                support for DH groups 19 and 20 in FCS_IPSEC_EXT.1.8). It also provides the
                ability to claim either NIST SP 800-56A or RFC 3526 for key establishment using
                finite field cryptography. One of these two claims must be made in support of DH
                group 14 in FCS_IPSEC_EXT.1.8. The use of RSA is not explicitly mandated by the
                VPN client but it is mandatory in the MDF PP, which is why it remains mandatory
                here.
              </note>
              <aactivity>               
                For all key establishment schemes that conform to NIST SP 800-56A or 800-56B, refer to the
                evaluation activity for FCS_CKM.2(1) in the MDF PP.<h:p/>
                If “Key establishment scheme using Diffie-Hellman group 14…” is selected, the evaluator shall ensure
                that the TSS describes how the implementation meets RFC 3526 Section 3. The evaluator shall also
                verify the correctness of the TSF’s implementation of Diffie-Hellman group 14 by using a known good
                implementation for each protocol selected in FTP_ITC_EXT.1 in the MDF PP that
                uses Diffie-Hellman group 14. Note that because a TOE that conforms to this PP-Module must
                implement IPsec, the tested protocols shall include IPsec at minimum.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_cop.1(1)" name="Cryptographic Operation">
            <consistency-rationale/>
            <f-element>
              <title>The OS shall perform encryption/decryption services for data in accordance with
                a specified cryptographic algorithm
                <h:ul>
                  <h:li>AES-CBC (as defined in FIPS PUB 197, NIST SP 800-38A),</h:li>
                  <h:li>AES-CCMP (as defined in FIPS PUB 197, NIST SP 800-38C and IEEE 802.11-2012),</h:li>
                  <h:li><h:b>AES-GCM (as defined in NIST SP 800-38D),</h:b></h:li>
                </h:ul>
                
                and <selectables linebreak="yes">
                  <selectable>AES Key Wrap (KW) (as defined in NIST SP 800-38F),</selectable>
                  <selectable>AES Key Wrap with Padding (KWP) (as defined in NIST SP 800-38F),</selectable>
                  <selectable>AES-CCM (as defined in NIST SP 800-38C),</selectable>
                  <selectable>AES-XTS (as defined in NIST SP 800-38E),</selectable>
                  <selectable>AES-CCMP-256 (as defined in NIST SP800-38C and IEEE 802.11ac-2013),</selectable>
                  <selectable>AES-GCMP-256 (as defined in NIST SP800-38D and IEEE 802.11ac-2013),</selectable>
                  <selectable>no other modes</selectable>
                  
                </selectables>
                and cryptographic key sizes 128-bit key sizes and [<h:i>256-bit key sizes</h:i>].
              </title>
              
              <note role="application">
                This SFR is identical to what is defined in the MDF PP except that support for
                GCM mode and support for 256-bit key sizes are both mandatory in order to
                address the requirements for FCS_IPSEC_EXT.1.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FCS_COP.1(1) in the MDF PP.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
        <subsection title="Identification and Authentication (FIA)" id="fia">
          <f-component id="fia_x509_ext.2" name="X.509 Certificate Authentication">
            <consistency-rationale></consistency-rationale>
            <f-element>
              <title>The TSF shall use X.509v3 certificates as defined by RFC 5280 to support
                authentication for <h:b>IPsec</h:b>, and <selectables>
                  <selectable>TLS</selectable>
                  <selectable>HTTPS</selectable>
                  <selectable>DTLS</selectable>
                  <selectable><h:b>no other protocols</h:b></selectable>
                </selectables>, and <selectables>
                  <selectable>code signing for system software updates</selectable>
                  <selectable>code signing for mobile applications</selectable>
                  <selectable>code signing for integrity verification</selectable>
                  <selectable><assignable>other uses</assignable></selectable>
                  <selectable>no additional uses</selectable>
                </selectables>.</title>
            </f-element>
            <f-element>
              <title>When the TSF cannot establish a connection to determine the validity of a
                certificate, the TSF shall <selectables>
                  <selectable>allow the administrator to choose whether to accept the certificate in these cases</selectable>
                  <selectable>accept the certificate</selectable>
                  <selectable>not accept the certificate</selectable>
                </selectables>. 
                </title>
              <note role="application">
                This SFR is identical to what is defined in the MDF PP except that support for
                IPsec is mandated. Since the original SFR did not explicitly require at least one of
                TLS, HTTPS, or DTLS to be selected, “no other protocols” has also been added as
                a selection in the event that IPsec is the only protocol for which the TOE uses
                X.509v3 certificates for authentication.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FIA_X509_EXT.2 in the MDF PP.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
        <subsection title="Trusted Path/Channels (FTP)" id="ftp">
          <f-component id="ftp_itc_ext.1" name="Trusted Channel Communication">
            <consistency-rationale></consistency-rationale>
            <f-element>
              <title>The TSF shall use 802.11-2012, 802.1X, EAP-TLS, <h:b>IPsec,</h:b> and
                <selectables>
                  <selectable>TLS</selectable>
                  <selectable>HTTPS</selectable>
                  <selectable>DTLS</selectable>
                  <selectable><h:b>no other protocols</h:b></selectable>
                </selectables>
                to provide a communication channel between itself
                and another trusted IT product that is logically distinct from other
                communication channels, provides assured identification of its end points,
                protects channel data from disclosure, and detects modification of the channel
                data.
                </title>
            </f-element>
            <f-element>
              <title>The TSF shall permit the TSF to initiate communication via the trusted channel.
              </title>
            </f-element>
            <f-element>
              <title>
                The TSF shall initiate communication via the trusted channel for wireless access
                point connections, administrative communication, configured enterprise
                connections, and <selectables>
                  <selectable>OTA updates</selectable>
                  <selectable>no other connections</selectable>
                </selectables>.
              </title>
              <note role="application">
                This SFR is identical to what is defined in the MDF PP except that support for
                IPsec is mandated. Additionally, since the MDF PP requires ‘at least one of’ the
                selected protocols which previously included IPsec, ‘no other protocols’ is now
                available as an option in the selection.
              </note>
              <aactivity>               
                Refer to the evaluation activity for FTP_ITC_EXT.1 in the MDF PP.
                <no-tests/>          
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
      </modified-sfrs>
      <additional-sfrs>
        
        <subsection title="Cryptographic Support (FCS)" id="fcs">
          <f-component id="fcs_ckm.1/VPN" name="Cryptographic Key Generation (IKE)">
            <consistency-rationale/>
            <f-element>
              <title>The <h:b><selectables>
                <selectable>VPN client</selectable>
                <selectable>OS</selectable>
              </selectables></h:b>
                
                shall generate asymmetric cryptographic keys used for IKE peer authentication in accordance with: <h:b>
                
                <selectables linebreak="yes">
                  <selectable>FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.3 for RSA
                    schemes;
                  </selectable>
                  <selectable>FIPS PUB 186-4, “Digital Signature Standard (DSS)”, Appendix B.4 for
                    ECDSA schemes and implementing “NIST curves”, P-256, P-384, and <selectables>
                      <selectable>P-521</selectable>
                      <selectable>no other curves</selectable>
                    </selectables>
                  </selectable>
                </selectables>
                </h:b>
                  
                  and specified cryptographic key sizes <h:b>equivalent to, or greater than, a
                    symmetric key strength of 112 bits</h:b>.
      
              </title>
              
              <note role="application">
                The keys that are required to be generated by the TOE through this requirement
                are intended to be used for the authentication of the VPN entities during the IKE
                (either v1 or v2) key exchange. While it is required that the public key be
                associated with an identity in an X.509v3 certificate, this association is not
                required to be performed by the TOE, and instead is expected to be performed by
                a Certificate Authority in the Operational Environment. <h:p/>
                
                As indicated in FCS_IPSEC_EXT.1, the TOE is required to implement support for
                RSA or ECDSA (or both) for authentication.<h:p/>
                
                See NIST Special Publication 800-57, “Recommendation for Key Management”
                for information about equivalent key strengths.
                
              </note>
              <aactivity>               
                <TSS>The evaluator shall examine the TSS to verify that it describes how the key generation functionality is
                  invoked.</TSS>
                <Guidance>There are no guidance evaluation activities for this component.</Guidance>
                <no-tests/>
              </aactivity>
            </f-element>
          </f-component>
        </subsection>

      </additional-sfrs>

      <con-toe> 
        <!--      When this PP-Module extends the Network Device cPP, the TOE type for the overall TOE is still WIDS/WIPS products. --></con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>

    </base-pp>
    

    <base-pp version="3.1" name="Application Software" product="Application Software" short="App" url="https://www.niap-ccevs.org/Profile/Info.cfm?PPID=429" xmlurl="test">
      <modified-sfrs>
        
          <subsection title="Cryptographic Support (FCS)" id="fcs">
            <f-component id="fcs_ckm.1(1)" name="Cryptographic Asymmetric Key Generation">
              <consistency-rationale/>
              <f-element>
                <title>The application shall <selectables linebreak="yes">
                  <selectable>invoke platform-provided functionality</selectable>
                  <selectable>implement functionality</selectable>
                </selectables> to generate asymmetric cryptographic keys in accordance with a specified
                  cryptographic key generation algorithm 
                  <h:b>                 
                  <h:ul>
                    <h:li>[ECC schemes] using [“NIST curves” P-256, P-384, and <selectables>
                          <selectable>P-521</selectable>
                          <selectable>no other curves</selectable>
                        </selectables>] that meet the following: FIPS PUB 186-4, “Digital Signature
                        Standard (DSS)”, Appendix B.4,
                    </h:li> <selectables linebreak="yes">
                    <selectable>[FFC schemes] using cryptographic key sizes of [2048-bit or greater] that meet
                      the following: FIPS PUB 186-4, “Digital Signature Standard (DSS)”,
                      Appendix B.1,
                      </selectable>
                      <selectable>[FFC schemes] using Diffie-Hellman group 14 that meet the following: RFC 3526, Section 3,</selectable>
                      </selectables>
                  </h:ul>
                </h:b>
                  
                  <selectables linebreak="yes">
                    <selectable>[RSA schemes] using cryptographic key sizes of [2048-bit or greater] that meet
                      the following: FIPS PUB 186-4, “Digital Signature Standard (DSS),
                      Appendix B.3",
                    </selectable>
                    <selectable>[FFC schemes] using "safe-prime" groups that meet the following: 
                      NIST Special Publication 800-56A Revision 3, "Recommendation for Pair-Wise Key Estbalishment Schemes using Discrete
                      Logarithm Cryptography" and <selectables>
                        <selectable>RFC 3526</selectable>
                        <selectable>RFC 7919</selectable>
                      </selectables> 
                    </selectable>
                    <selectable><h:b>No other key generation methods</h:b></selectable>
                  </selectables>.
                </title>
                
                <note role="application">
                  This SFR is selection-based in the App PP depending on the selection made in
                  FCS_CKM_EXT.1. Because key generation services (whether implemented by the
                  TOE or invoked from the platform) are required for IPsec, this SFR is mandatory
                  for any TOE that claims conformance to this PP-Module.<h:p/>
                  
                  This SFR is functionally identical to what is defined in the App PP except that ECC key generation and at least one of FFC or DH group 14 
                  key generation have been made mandatory in support of IPsec due to
                  the mandated support for DH groups 14, 19, and 20 in FCS_IPSEC_EXT.1.8. RSA and "safe-prime" FFC
                  remain present as selections since they may be used by parts of the TSF
                  that are not specifically related to VPN client functionality.
                </note>
                <aactivity>               
                  Refer to the evaluation activity for FCS_CKM.1(1) in the App PP for evaluating this SFR.
                  <no-tests/>          
                </aactivity>
              </f-element>
            </f-component>
            
            <f-component id="fcs_ckm.2" name="Cryptographic Key Establishment">
              <consistency-rationale/>
              <f-element>
                <title>The application shall <selectables>
                  <selectable>invoke platform-provided functionality</selectable>
                  <selectable>implement functionality</selectable>
                </selectables> to perform cryptographic key
                  establishment in accordance with a specified key establishment method: 
                  
                  <h:ul>
                    <h:li><h:b>[Elliptic curve-based key establishment schemes] that meets the following: [NIST
                      Special Publication 800-56A, “Recommendation for Pair-Wise Key Establishment
                      Schemes Using Discrete Logarithm Cryptography”],</h:b>
                    </h:li>
                  </h:ul>
                  
                  <h:b>
                  <selectables linebreak="yes">
                    <selectable>[Finite field-based key establishment schemes]that meets the following: [NIST
                      Special Publication 800-56A, “Recommendation for Pair-Wise Key Establishment
                      Schemes Using Discrete Logarithm Cryptography”],
                    </selectable>
                    <selectable>[Key establishment scheme using Diffie-Hellman group 14]that meets the
                      following: RFC 3526, Section 3,
                    </selectable>
                  </selectables> and </h:b><selectables linebreak="yes">
                    <selectable>[RSA-based key establishment schemes] that meets the following: [NIST Special
                      Publication 800-56B, “Recommendation for Pair-Wise Key Establishment
                      Schemes Using Integer Factorization Cryptography”],</selectable>
                    <selectable>[RSA-based key establishment schemes]that meet the following: RSAES-PKCS1-
                      v1_5 as specified in Section 7.2 of RFC 8017, “Public-Key Cryptography
                      Standards (PKCS) #1: RSA Cryptography Specifications Version 2.1”,</selectable>
                    <selectable>[FFC Schemes using “safe-prime” groups]that meet the following: ‘NIST Special
                    Publication 800-56A Revision 3, “Recommendation for Pair-Wise Key
                    Establishment Schemes Using Discrete Logarithm Cryptography” and [selection:
                    RFC 3526, RFC 7919]</selectable>
                    <selectable><h:b>no other key establishment schemes</h:b></selectable>
                  </selectables>.
                </title>
                
                <note role="application">
                  This SFR differs from its definition in the App PP by moving elliptic curve-based
                  key establishment schemes from selectable to mandatory (due to the mandated
                  support for DH groups 19 and 20 in FCS_IPSEC_EXT.1.8). It also provides the
                  ability to claim either NIST SP 800-56A or RFC 3526 for key establishment using
                  finite field cryptography. One of these two claims must be made in support of DH
                  group 14 in FCS_IPSEC_EXT.1.8. Other selections remain conditional for TSF functionality that may exist outside the VPN Client portion of the TOE.
                </note>
                <aactivity>               
                  Refer to the evaluation activity for FCS_CKM.2 in the App PP.
                  <no-tests/>          
                </aactivity>
              </f-element>
            </f-component>
            
            <f-component id="fcs_cop.1(1)" name="Cryptographic Operation">
              <consistency-rationale/>
              <f-element>
                <title>The application shall perform encryption/decryption in accordance with
                  a specified cryptographic algorithm <h:b>
                  <h:ul>
                    <h:li>AES-CBC (as defined in NIST SP 800-38A) mode,</h:li>
                    <h:li>AES-GCM (as defined in NIST SP 800-38D) mode,</h:li>
                  </h:ul>
                  and </h:b><selectables linebreak="yes">
                    <selectable>AES-XTS (as defined in NIST SP 800-38E) mode</selectable>
                    <selectable><h:b>no other modes</h:b></selectable>
                  </selectables>

                  and cryptographic key sizes [<h:i>128-bit, 256-bit</h:i>].
                </title>
                
                <note role="application">
                  This SFR is identical to what is defined in the App PP except that support for CBC and GCM modes
                  and support for both 128-bit and 256-bit key sizes are mandatory in order to address 
                  the requirements for FCS_IPSEC_EXT.1. Therefore, the relevant selections have
                  already been completed.<h:p/>
                  
                  This SFR is selection-based in the App PP and is still selection-based for this PP-Module since the application’s underlying platform can still provide
                  cryptographic services on behalf of the TOE.
                </note>
                <aactivity>               
                  Refer to the evaluation activity for FCS_COP.1(1) in the App PP.
                  <no-tests/>          
                </aactivity>
              </f-element>
            </f-component>
          </subsection>
          <subsection title="Identification and Authentication (FIA)" id="fia">
            <f-component id="fia_x509_ext.2" name="X.509 Certificate Authentication">
              <consistency-rationale></consistency-rationale>
              <f-element>
                <title>The application shall use X.509v3 certificates as defined by RFC 5280 to support
                  authentication for <h:b>IPsec and</h:b> <selectables>
                    <selectable>HTTPS</selectable>
                    <selectable>TLS</selectable>
                    <selectable>DTLS</selectable>
                    <selectable><h:b>no other protocols</h:b></selectable>
                  </selectables>.</title>
              </f-element>
              <f-element>
                <title>When the application cannot establish a connection to determine the validity of a
                  certificate, the TSF shall <selectables>
                    <selectable>allow the administrator to choose whether to accept the certificate in these cases</selectable>
                    <selectable>accept the certificate</selectable>
                    <selectable>not accept the certificate</selectable>
                  </selectables>. 
                </title>
                <note role="application">
                  This SFR is identical to what is defined in the App PP except that mandatory
                  support for IPsec is added. Additionally, because this SFR is selection-based in
                  the App PP but is mandatory for VPN client usage, the ‘no other protocols’
                  selection item has been added in the case that IPsec is the TOE’s only use of
                  certificates.
                </note>
                <aactivity>               
                  Refer to the evaluation activity for FIA_X509_EXT.2 in the App PP.
                  <no-tests/>          
                </aactivity>
              </f-element>
            </f-component>
          </subsection>
          <subsection title="Trusted Path/Channels (FTP)" id="ftp">
            <f-component id="ftp_dit_ext.1" name="Protection of Data in Transit">
              <consistency-rationale></consistency-rationale>
              <f-element>
                <title>The application shall [<h:i>encrypt all transmitted sensitive data with <h:b>Ipsec</h:b> and
                  <selectables>
                    <selectable>HTTPS</selectable>
                    <selectable>TLS</selectable>
                    <selectable>DTLS</selectable>
                    <selectable><h:b>no other protocols</h:b></selectable>
                  </selectables></h:i>]
                  to provide a communication channel between itself
                  and another trusted IT product.</title>
                <note role="application">
                  This SFR is identical to what is defined in the App PP except that mandatory
                  support for IPsec is added and the ST author is forced to select the ‘encrypt all
                  transmitted sensitive data’ option. However, since it is possible that a
                  conformant TOE may not use any encryption protocols other than IPsec, “no
                  other protocols” is provided as a selectable option in the list of supported
                  protocols.
                </note>
                <aactivity>               
                  Refer to the evaluation activity for FTP_DIT_EXT.1 in the App PP.
                  <no-tests/>          
                </aactivity>
              </f-element>
            </f-component>
          </subsection>
      </modified-sfrs>
      <additional-sfrs>
        <subsection title="Cryptographic Support (FCS)" id="fcs">
          <f-component id="fcs_ckm_ext.2" name="Cryptographic Key Storage">
            <consistency-rationale/>
            <f-element>
              <title>The <selectables>
                <selectable>TOE</selectable>
                <selectable>TOE platform</selectable>
              </selectables> shall store persistent secrets and private keys
                when not in use in platform-provided key storage.
              </title>
              
              <note role="application">
                This requirement ensures that persistent secrets and private keys are stored
                securely when not in use. This differs from FCS_STO_EXT.1 in the App PP, which
                only applies to secure storage of administrative credentials. If some secrets/keys
                are manipulated by the TOE and others are manipulated by the platform, then
                both of the selections can be specified by the ST author.
              </note>
              <aactivity>               
                <TSS>Regardless of whether this requirement is met by the TOE or the TOE platform, the evaluator will
                  check the TSS to ensure that it lists each persistent secret (credential, secret key) and private key
                  needed to meet the requirements in the ST. For each of these items, the evaluator will confirm that
                  the TSS lists for what purpose it is used, and how it is stored. The evaluator then performs the
                  following actions: <h:p/>
                  
                  <h:b>Persistent secrets and private keys manipulated by the platform:</h:b><h:p/>
                
                For each platform listed in the ST, the evaluator shall examine the ST of the platform to ensure that
                the persistent secrets and private keys listed as being stored by the platform in the VPN client ST are
                identified as being protected in that platform's ST.<h:p/>
                
                  <h:b>Persistent secrets and private keys manipulated by the TOE:</h:b><h:p/>
                  
                  The evaluator reviews the TSS for to determine that it makes a case that, for each item listed as
                  being manipulated by the TOE, it is not written unencrypted to persistent memory, and that the item
                  is stored by the platform.
                </TSS>
                <Guidance>There are no guidance evaluation activities for this component.</Guidance>
                <no-tests/>
              </aactivity>
            </f-element>
          </f-component>
          
          <f-component id="fcs_ckm_ext.4" name="Cryptographic Key Destruction">
            <consistency-rationale/>
            <f-element>
              <title>The <selectables>
                <selectable>TOE</selectable>
                <selectable>TOE platform</selectable>
              </selectables> shall zeroize all plaintext secret and private
                cryptographic keys and CSPs when no longer required.
              </title>
              <note role="application">
                Any security related information (such as keys, authentication data, and
                passwords) must be zeroized when no longer in use to prevent the disclosure or
                modification of security critical data.<h:p/>
                
                The zeroization indicated above applies to each intermediate storage area for
                plaintext key/CSP (i.e., any storage, such as memory buffers, that is included in
                the path of such data) upon the transfer of the key/CSP to another location.<h:p/>
                
                In practice, the TOE will not implement all of the functionality associated with
                the requirement, since if it performs zeroization at all it will be by invoking
                platform interfaces to perform the storage location clear/overwrite function. The
                ST author should select "TOE" when, for at least one of the keys needed to meet
                the requirements of this PP, the TOE manipulates (reads, writes) the data
                identified in the requirement and thus needs to ensure that those data are
                cleared. In these cases, it is sufficient for the TOE to invoke the correct
                underlying functions of the host to perform the zeroization--it does not imply
                that the TOE has to include a kernel-mode memory driver to ensure the data are
                zeroized.<h:p/>
                
                In the likely event that some of the data are manipulated by the TOE and other
                data are manipulated entirely by the platform, the ST author shall select both
                options and make it clear in the TSS the entity responsible (TOE, TOE platform)
                for performing the zeroization.
              </note>
              <aactivity>               
                <TSS>The evaluator shall ensure that all plaintext secret and private cryptographic keys and CSPs (whether
                  manipulated by the TOE or exclusively by the platform) are identified in the VPN Client ST's TSS, and
                  that they are accounted for by the evaluation activity in this section. <h:p/>
                  
                  <h:b>Requirement met by the platform:</h:b><h:p/>
                  
                  The evaluator shall check to ensure the TSS describes each of the secret keys (keys used for
                  symmetric encryption), private keys, and CSPs used to generate key that are not otherwise covered
                  by the FCS_CKM_EXT.4 requirement levied on the TOE.<h:p/>
                  For each platform listed in the ST, the evaluator shall examine the TSS of the ST of the platform to
                  ensure that each of the secret keys, private keys, and CSPs used to generate key listed above are
                  covered. <h:p/>
                  
                  <h:b>Requirement met by the TOE:</h:b><h:p/>
                  
                  The evaluator shall check to ensure the TSS describes when each of the plaintext keys are cleared
                  (e.g., system power off, disconnection of an IPsec connection, when no longer needed by the VPN
                  channel per the protocol); and the type of clearing procedure that is performed (cryptographic
                  erase, overwrite with zeros, overwrite three or more times by a different alternating pattern,
                  overwrite with random pattern, or block erase). If different types of memory are used to store the
                  materials to be protected, the evaluator shall check to ensure that the TSS describes the clearing
                  procedure in terms of the memory in which the data are stored (for example, "secret keys stored on
                  flash are cleared by overwriting once with zeros, while secret keys stored on the internal persistent
                  storage device are cleared by overwriting three times with a random pattern that is changed before
                  each write").</TSS>
                <Guidance>There are no guidance evaluation activities for this component</Guidance>
                <Tests>For each key clearing situation described in the TSS, the evaluator shall repeat the following test.
                <testlist>
                  <test>The evaluator shall utilize appropriate combinations of specialized operational environment
                    and development tools (debuggers, simulators, etc.) for the TOE and instrumented TOE builds to test
                    that keys are cleared correctly, including all intermediate copies of the key that may have been
                    created internally by the TOE during normal cryptographic processing with that key.<h:p/>
                    Cryptographic TOE implementations in software shall be loaded and exercised under a debugger to
                    perform such tests. The evaluator shall perform the following test for each key subject to clearing,
                    including intermediate copies of keys that are persisted encrypted by the TOE:<h:p/>
                    1. Load the instrumented TOE build in a debugger.<h:br/>
                    2. Record the value of the key in the TOE subject to clearing.<h:br/>
                    3. Cause the TOE to perform a normal cryptographic processing with the key from #1.<h:br/>
                    4. Cause the TOE to clear the key.<h:br/>
                    5. Cause the TOE to stop the execution but not exit.<h:br/>
                    6. Cause the TOE to dump the entire memory footprint of the TOE into a binary file.<h:br/>
                    7. Search the content of the binary file created in #4 for instances of the known key value from
                    #1.<h:p/>
                    The test succeeds if no copies of the key from #1 are found in step #7 above and fails otherwise.<h:p/>
                    The evaluator shall perform this test on all keys, including those persisted in encrypted form, to ensure intermediate copies are erased.</test>
                </testlist>
                </Tests>
              </aactivity>
            </f-element>
          </f-component>
        </subsection>
      </additional-sfrs>
      
      <con-toe> 
        <!--      When this PP-Module extends the Network Device cPP, the TOE type for the overall TOE is still WIDS/WIPS products. --></con-toe>
      <con-sec-prob/>
      <con-obj/>
      <con-op-en/>
    </base-pp>

    <man-sfrs>
      <subsection title="Cryptographic Support (FCS)" id="fcs">
        
        <!-- 
        
        In order to show that the TSF implements the RFCs in accordance with the requirements of this PPModule, the evaluator shall perform the Assurance Activities listed in the Supporting Document. In
        future versions of this PP-Module, Assurance Activities may be augmented, or new ones introduced that
        cover more aspects of RFC compliance than are currently described in this publication.
        The TOE is required to use the IPsec protocol to establish connections used to communicate with an
        IPsec peer.<h:p/> 
        
        <figure entity="images/network.jpg" title="Sample Test Environment" id="network"/> <h:p/>
        
        The evaluators shall minimally create a test environment equivalent to the test environment illustrated
        above. It is expected that the traffic generator is used to construct network packets and will provide the
        evaluator with the ability manipulate fields in the ICMP, IPv4, IPv6, UDP, and TCP packet headers. The
        evaluators must provide justification for any differences in the test environment.<h:p/>
        
        In the following elements of the FCS_IPSEC_EXT.1 component, it is allowable for some or all of the
        individual elements to be implemented by the platform on which the VPN client operates. If the TOE
        extends the App PP, the ST author will indicate whether the TOE or TOE platform implements the VPN
        functionality through the selections in the components of this SFR. If the TOE extends the GPOS PP or
        MDF PP, all IPsec functionality will be implemented by the TOE. In this case, the ST author must identify
        in the TSS which functions are implemented by the VPN client portion of the TOE versus the underlying
        operating system or mobile device.<h:p/>
        
        If the configuration is to be performed on the platform, the evaluators shall ensure that the "operational
        guidance" for each platform in the VPN client ST contains the appropriate information (either through
        reference in the platform's ST, or by information contained in the VPN client ST). All tests must be
        performed by the evaluators using the VPN client and a representative sample of platforms listed in the
        VPN client ST.
        
         -->
        
        <f-component name="IPsec" id="fcs_ipsec_ext.1">
          <consistency-rationale></consistency-rationale>
        </f-component>
        
      </subsection>
      
      <subsection title="User Data Protection (FDP)" id="fdp">
        <f-component id="fdp_rip.2" name="Full Residula Information Protection"> 
          <consistency-rationale/>
          <f-element>
            <title> The <selectables>
              <selectable>TOE</selectable>
              <selectable>TOE platform</selectable>
            </selectables>  shall enforce that any previous information
              content of a resource is made unavailable upon the <selectables>
                <selectable>allocation of the resource to</selectable>
                <selectable>deallocation of the resource from</selectable>
              </selectables> all objects.
            </title>
            <note role="application">
              This requirement ensures, for example, that protocol data units (PDUs) are not
              padded with residual information such as cryptographic key material. The ST
              author uses the selection to specify when previous information is made
              unavailable.</note>
            <aactivity>
              <TSS><h:b>Requirement met by the platform</h:b><h:p/>
                The evaluator shall examine the TSS to verify that it describes (for each supported platform) the
                extent to which the client processes network packets and addresses the FDP_RIP.2 requirement.<h:p/>
                <h:b>Requirement met by the TOE</h:b><h:p/>
                “Resources” in the context of this requirement are network packets being sent through (as opposed
                to “to”, as is the case when a security administrator connects to the TOE) the TOE. The concern is
                that once a network packet is sent, the buffer or memory area used by the packet still contains data
                from that packet, and that if that buffer is re-used, those data might remain and make their way into
                a new packet. The evaluator shall check to ensure that the TSS describes packet processing to the
                extent that they can determine that no data will be reused when processing network packets. The
                evaluator shall ensure that this description at a minimum describes how the previous data are
                zeroized/overwritten, and at what point in the buffer processing this occurs.
              </TSS>
              <Guidance>There are no guidance evaluation activities for this component.
              </Guidance>
              <no-tests/>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      
      <subsection title="Security Management (FMT)" id="fmt">
        <!-- 
        The TOE is not required to maintain a separate management role. It is, however, required to provide
        functionality to configure certain aspects of TOE operation that should not be available to the general
        user population. It is possible for the TOE, TOE Platform, or VPN Gateway to provide this functionality.
        The client itself has to be configurable - whether it is from the EUD or from a VPN gateway.  -->
        
        <f-component id="fmt_smf.1" name="Specification of Management Functions (VPN)" iteration="VPN"> 
          <consistency-rationale/>
          <f-element>
            <title> The TSF shall be capable of performing the following management functions: <selectables linebreak="yes">
              <selectable>Specify VPN gateways to use for connections</selectable>
              <selectable>Specify IPsec VPN Clients to use for connections</selectable>
              <selectable>Specify IPsec-capable network devices to use for connections</selectable>
              <selectable>Specify client credentials to be used for connections</selectable>
              <selectable>Configure the reference identifier of the peer</selectable>
              <selectable><assignable>any additional management functions</assignable></selectable>
            </selectables> 
            </title>
            <note role="application">Several of the management functions defined above correspond to the use cases
              of the TOE as follows: <h:ul>
                <h:li>“Specify VPN gateways to use for connections” – Use Case 1</h:li>
                <h:li>“Specify IPsec VPN Clients to use for connections” – Use Case 2 (specifically
                  refers to different end points to use for client-to-client connections)</h:li>
                <h:li>“Specify IPsec-capable network devices to use for connections” – Use Case 3</h:li>
              </h:ul>
              Selections appropriate for the use case(s) supported by the TOE should be
              claimed. "Client credentials" will include the client certificate used for IPsec
              authentication, and may also include a username/password.<h:p/>
              
              For TOEs that support only IP address and FQDN identifier types, configuration
              of the reference identifier may be the same as configuration of the peer’s name
              for the purposes of connection.<h:p/>
              
              If there are additional management functions performed by the TOE (including
              those specified in FCS_IPSEC_EXT.1), they should be added in the assignment.
              </note>
            <aactivity>
              <TSS>The evaluator shall check to ensure the TSS describes the client credentials and how they are used
                by the TOE.
              </TSS>
              <Guidance>The evaluator shall check to make sure that every management function mandated in the ST for this
                requirement are described in the operational guidance and that the description contains the
                information required to perform the management duties associated with each management
                function. 
              </Guidance>
              <Tests>
                The evaluator shall test the TOE’s ability to provide the management functions by configuring the
                TOE according to the operational guidance and testing each management activity listed in the ST.<h:p/>
                The evaluator shall ensure that all management functions claimed in the ST can be performed by
                completing activities described in the AGD. Note that this may be performed in the course of
                completing other testing.
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      
      <subsection title="Protection of the TSF (FPT)" id="fpt">

        <f-component id="fpt_tst_ext.1" name="TSF Self-Test">
          <consistency-rationale/>
          <f-element>
            <title>
            The <selectables>
              <selectable>TOE</selectable>
              <selectable>TOE platform</selectable>
            </selectables> shall run a suite of self tests during initial
            start-up (on power on) to demonstrate the correct operation of the TSF.
            </title>
          </f-element>
          <f-element>
            <title>
              The <selectables>
                <selectable>TOE</selectable>
                <selectable>TOE platform</selectable>
              </selectables> shall provide the capability to verify the
              integrity of stored TSF executable code when it is loaded for execution through
              the use of the <assignable>cryptographic services provided either by the portion
                of the TOE described by the Base-PP or by the operational environment</assignable>.
            </title>
            <note role="application">While the TOE is typically a software package running in the IT Environment, it is
              still capable of performing the self-test activities required above. It should be
              understood, however, that there is a significant dependency on the host
              environment in assessing the assurance provided by the tests mentioned above
              (meaning that if the host environment is compromised, the self-tests will not be
              meaningful).<h:p/>
              
              Cryptographic verification of the integrity is required, but the method by which
              this can be accomplished is specified in the ST in the assignment. The ST author
              will fill in the assignment with references to the cryptographic functions used to
              perform the integrity checks; this will include hashing and may potentially
              include digital signatures signed using X.509 certificates. If the TSF provides the
              cryptographic services used to verify updates, all relevant FCS_COP requirements
              will be identified in the assignment by the ST author.
            </note>
            <aactivity>
              Except for where it is explicitly noted, the evaluator is expected to check the following information
              regardless of whether the functionality is implemented by the TOE or by the TOE platform.
              <TSS>The evaluator shall examine the TSS to ensure that it details the self-tests that are run by the TSF on
                start-up; this description should include an outline of what the tests are actually doing (e.g., rather
                than saying "memory is tested", a description similar to "memory is tested by writing a value to each
                memory location and reading it back to ensure it is identical to what was written" shall be used). The
                evaluator shall ensure that the TSS makes an argument that the tests are sufficient to demonstrate
                that the TSF is operating correctly. If some of the tests are performed by the TOE platform, the
                evaluator shall check the TSS to ensure that those tests are identified, and that the ST for each
                platform contains a description of those tests. Note that the tests that are required by this
                component are those that support security functionality in this PP-Module, which may not
                correspond to the set of all self-tests contained in the platform STs.<h:p/>
                
                The evaluator shall examine the TSS to ensure that it describes how the integrity of stored TSF
                executable code is cryptographically verified when it is loaded for execution. The evaluator shall
                ensure that the TSS makes an argument that the tests are sufficient to demonstrate that the
                integrity of stored TSF executable code has not been compromised. The evaluator shall check to
                ensure that the cryptographic requirements listed are consistent with the description of the integrity
                verification process.<h:p/>
                
                The evaluator also ensures that the TSS (or the operational guidance) describes the actions that take
                place for successful (e.g. hash verified) and unsuccessful (e.g., hash not verified) cases. For checks
                implemented entirely by the platform, the evaluator ensures that the operational guidance for the
                TOE references or includes the platform-specific guidance for each platform listed in the ST.
              </TSS>
              <Guidance>If not present in the TSS, the evaluator ensures that the operational guidance describes the actions
                that take place for successful (e.g. hash verified) and unsuccessful (e.g., hash not verified) cases. For 
                checks implemented entirely by the platform, the evaluator ensures that the operational guidance
                for the TOE references or includes the platform-specific guidance for each platform listed in the ST.
              </Guidance>
              <Tests>
                The evaluator shall perform the following tests:
                <testlist>
                  <test>The evaluator performs the integrity check on a known good TSF executable and verifies that
                    the check is successful.
                  </test>
                  <test>The evaluator modifies the TSF executable, performs the integrity check on the modified TSF
                    executable and verifies that the check fails.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      
    </man-sfrs>
    <opt-sfrs>
      <subsection title="Security Audit (FAU)" id="fau">
        <ext-comp-def title="Wireless Spectrum Monitoring" fam-id="FAU_WID_EXT">
          <mod-def/>
        </ext-comp-def>
        <f-component id="fau_wid_ext.6" name="Wireless Intrusion Detection – Non-Wireless Spectrum Monitoring"> <!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall detect the presence of network devices that operate in the
              following RF bands: <selectables>
                <selectable>3.6 GHz</selectable>
                <selectable>60 GHz</selectable>
                <selectable>sub-GHz (0-900 MHz)</selectable>
                <selectable id="cell">all cellular bands</selectable>
              </selectables>
            </title>
            <note role="application"> This SFR refers to Non-Wi-Fi (IEEE 802.11 a, b, g, n, and ac)
              network devices that operate in the specified frequencies. If the ST author selects
              detection of devices in the cellular bands, <linkref linkend="FAU_INV_EXT.4.1"/> must
              be included in the ST. </note>
            <aactivity>
              <TSS> 
                The evaluator shall verify that the TSS includes the set of RF bands and
                technologies that the TSF can detect the use of. The TSS should also include
                instructions on how to enable and the hardware that is necessary for the additional
                band detection. <h:br/><h:br/>
              </TSS>
              <Guidance> 
                The evaluator shall verify that the operational guidance describes how to
                enable and configure detection of the technologies included in the ST as well as the
                hardware that is needed to perform this function.<h:br/><h:br/>
              </Guidance>
              <Tests> 
                The evaluator shall enable and configure detection of the selected
                technologies. 
                <testlist>
                  <test>Deploy a device within the given technology and verify that the TSF detects
                    the device.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
          
        <ext-comp-def title="Wireless Spectrum Monitoring" fam-id="FAU_WID_EXT"><!-- Changed: Split elements into two components. This is new component  -->
          <mod-def/>
        </ext-comp-def>
        <f-component id="fau_wid_ext.7" name="Wireless Intrusion Detection – Wireless Spectrum Analysis"> <!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
        <f-element>
            <title> The TSF shall provide a dedicated sensor for wireless spectrum analysis. </title>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS to verify that the TOE provides a
                dedicated sensor for wireless spectrum analysis.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall verify that the operational guidance describes how to
                enable and configure dedicated spectrum analysis as well as the hardware that is
                needed to perform this function.<h:br/><h:br/>
              </Guidance>
              <Tests> The evaluator shall enable and configure dedicated spectrum analysis and test
                the capabilities listed in the TSS. </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
    </opt-sfrs>
    <sel-sfrs>
      <subsection title="Security Audit (FAU)" id="fau">
        <ext-comp-def title="Anomaly-Based Intrusion Detection" fam-id="FAU_ANO_EXT">
          <fam-behavior/>
        </ext-comp-def>
        <f-component id="fau_ano_ext.1" name="Anomaly-Based Intrusion Detection"> <!-- DONE -->
          <selection-depends req="fau_ids_ext.1.1" ids="anoBased"/>
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall support the definition of <selectables>
              <selectable>baselines (‘expected and approved’)</selectable>
              <selectable>anomaly (‘unexpected’) traffic patterns</selectable>
            </selectables> including the specification of <selectables linebreak="yes">
              <selectable>throughput (data elements (e.g. bytes, packets, etc.) per time period (e.g. minutes, hours, days))</selectable>             
              <selectable>time of day</selectable>
              <selectable>frequency</selectable>
              <selectable>thresholds</selectable>
              <selectable><assignable>other methods</assignable></selectable>
            </selectables> and the following network protocol fields: <h:ul>
              <h:li>all management and control frame header elements.</h:li>
            </h:ul>
            </title>
          </f-element>
          <f-element>
            <title> The TSF shall support the definition of anomaly activity through <selectables>
              <selectable>manual configuration by administrators</selectable>
              <selectable>automated configuration</selectable>
            </selectables>. </title>
            <note role="application"> The “baseline” and “anomaly” can be something manually
              defined/configured by a TOE administrator (or importing definitions), or something
              that the TOE is able to automatically define/create by inspecting network traffic over
              a period of time (a.k.a. “profiling”). </note>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS describes the composition and
                construction of baselines or anomaly-based attributes specified in the SFR. The
                evaluator shall verify that the TSS provides a description of how baselines are
                defined and implemented by the TSF, or a description of how anomaly-based rules are
                defined and configured by the administrator. <h:br/><h:br/> The evaluator shall
                verify that the TSS describes the available modes of configuration (manual or
                automatic) and how to configure or import the baseline.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall verify that the operational guidance describes how to
                configure baseline and/or anomalous traffic patterns based on what is stated in the
                TSS.<h:br/><h:br/> The evaluator shall verify that the operational guidance
                describes how to perform automatic and/or manual definition of anomaly activity
                based on what is selected in the ST.<h:br/><h:br/>
              </Guidance>
              <Tests> The evaluator shall use the instructions in the operational guidance to
                configure baselines or anomaly-based rules through automated and/or manual means
                based on what is selected in the ST. The evaluator shall send traffic that does not
                match the baseline or matches the anomaly-based rule and verify the TSF detects the
                anomalous behavior and generates an alert. </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <!-- Justin: Is there really a need to allow a different range of accuracy for locating a device using cellular versus Wi-Fi? FAU_INV_EXT.4 (objective) states a 15 feet range to locate APs and EUDs -->
        <ext-comp-def title="Location of Environmental Objects (Cellular Devices)"
          fam-id="FAU_INV_EXT">
          <mod-def/>
        </ext-comp-def>
        <f-component name="Location of Environmental Objects (Cellular Devices)" id="fau_inv_ext.4" iteration="CELL"> <!-- DONE -->
          <selection-depends req="fau_wid_ext.6.1" ids="cell"/>
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> 
              The TSF shall detect the physical location of cellular devices to within <assignable>distance degree of accuracy</assignable> of their actual location.
            </title>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS includes information on the TOE’s
                ability to detect the physical location of cellular devices.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall review the operational guidance for instructions on how
                to configure location tracking, how to load a location map (if applicable), and
                where in the TSF administrator interface the location of devices can be
                viewed.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Deploy a cellular device within range of the sensors.</step>
                      <step>Verify that the TSF is able to track the location of the device.</step>
                      <step>Verify the level of accuracy indicated by the TSF falls within the one
                        indicated in the assignment.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="Signature-Based Intrusion Detection" fam-id="FAU_SIG_EXT">
          <fam-behavior/>
        </ext-comp-def>
        <f-component id="fau_sig_ext.1" name="Signature-Based Intrusion Detection"><!-- DONE -->
          <selection-depends req="fau_ids_ext.1.1" ids="sigBased"/>
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall support user-defined and customizable attack signatures. </title>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS describes the user-defined and
                customizable attack signatures that the TOE can define.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall verify that the operational guidance provides
                information on how to configure user-defined and customizable attack signatures,
                including a description of the customization options that are
                available.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Craft a signature with the available fields indicated in the TSS.</step>
                      <step>Send a crafted frame that matches the signature to a whitelisted
                        EUD</step>
                      <step>Verify that the TSF triggers an alert based on the newly defined
                        signature.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="Protected Audit Event Storage (Packet Captures)" fam-id="FAU_STG_EXT">
          <fam-behavior/>
        </ext-comp-def>
        <f-component id="fau_stg_ext.1" iteration="PCAP" name="Protected Audit Event Storage (Packet Captures)"> <!-- TODO: Look at 1.2 in ND -->
          <!-- This component is copied from ND cPP and iterated to make a distintion between audit records and PCAPs -->
          <selection-depends req="fau_arp.1.1" ids="pcap"/>
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title>The TSF shall be able to transmit the generated packet captures to an
              external IT entity using a trusted channel according to FTP_ITC.1. </title>
            <note role="application"> 
              Per FAU_STG_EXT.1 in the Base-PP, the TOE must support transfer of the audit data to an external IT entity using a trusted channel per FTP_ITC.1. Note that this PP-Module modifies <linkref linkend="FTP_ITC.1"/> from the Base-PP.
              
              If "capture raw frame traffic that triggers the violation" is selected in <linkref linkend="FAU_ARP.1"/>, then this SFR shall be included in the ST, and this iteration is for the PCAPs generated as a selectable action completed upon detection of a potential security violation in <linkref linkend="FAU_ARP.1"/>.
               </note>
          </f-element>
          <f-element> <!-- TODO: Look at this element in NDcPP -->
            <title>The TSF shall be able to store generated packet captures on the TOE itself. </title>
          </f-element>
          <f-element>
            <title> The TSF shall <selectables>
              <selectable>drop new packet capture data</selectable>
              <selectable>overwrite previous packet captures according to the following rule: <assignable>rule for overwriting previous packet captures</assignable>
              </selectable>
              <selectable>
                <assignable>other action</assignable>
              </selectable>
            </selectables> when the local storage space for packet capture data is full. </title>
            <aactivity>
              <TSS> 
                The evaluator shall verify that the TSS includes the list of trusted channels
                (as specified in FTP_ITC.1) available in the TSF to transmit packet captures to an
                external entity. The evaluator shall verify that the TSS describes the ability of
                the TOE to store packet capture data within itself, how much storage space is
                available for packet capture data and where that data is stored. The evaluator shall
                verify that the TSS describes the behavior of the TOE when local storage space for
                packet capture data is exhausted and whether this behavior is
                configurable.<h:br/><h:br/>
              </TSS>
              <Guidance> 
                The evaluator shall verify that the operational guidance provides
                instructions on how to configure the trusted channel. If the behavior of the TOE
                when local storage space for packet capture data is exhausted is configurable, the
                evaluator shall verify that the operational guidance provides information on what
                the configurable behaviors are and how they can be set.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>The evaluator shall configure packet captures according to the guidance
                    specified. The evaluator shall then trigger an event that starts a capture and
                    verify through the tests in FTP_ITC.1 that the captured traffic being sent to
                    the external device is being sent through a trusted channel.</test>
                  <test>The evaluator shall configure packet captures to be stored on the TSF
                    according to the guidance specified. The evaluator shall then trigger an event
                    that starts a capture and verify that the packet capture was stored on the
                    TSF.</test>
                  <test>The evaluator shall define packet data retention and deletion rules on the
                    TSF according to the guidance specified and test the functionality of the
                    specified rules.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
    </sel-sfrs>
    <obj-sfrs>
      <subsection title="Security Audit (FAU)" id="fau">
        <!-- Originally I asked Justin to add this SFR, most likely do not need it, b/c ND cPP covers it.  -->
        <!-- <f-component id="fau_gen.1" name="Device Configuration - Exporting Event Data">         
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall allow for the for the export of all captured event logs. </title>
            <note role="application">It is expected that an Authorized Administrator will be
              responsible for providing event output from the TSF for the purposes of ingest into
              other analysis and reporting mechanisms. Having the ability to export event log data
              from the device is a necessary capability to satisfy this requirement. </note>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS includes a list of available containment
                methods on the TSF and how to configure them.<h:br/><h:br/>
              </TSS>
              <Guidance> There are no operational guidance activities for this SFR.<h:br/><h:br/>
              </Guidance>
              <Tests> 
              <testlist>
                <test>
                  <steplist>
                    <step>Deploy a whitelisted AP and connect it to the protected wired
                      infrastructure via wire.</step>
                    <step>Confirm that the TSF can observe and capture traffic and events
                      generated by the AP.</step>
                    <step>Verify that the TSF can export its configuration and observable event
                      data in any of the following formats:</step>
                    <h:ul>
                      <h:li>comma separated values (CSV)</h:li>
                      <h:li>common log format (CLF)</h:li>
                      <h:li>JavaScript Object Notation (JSON)</h:li>
                      <h:li>syslog</h:li>
                    </h:ul>
                  </steplist>
                </test>
              </testlist>
              </Tests>
            </aactivity>
          </f-element>
          </f-component> -->
        
        
        <!--  How does this differ from FAU_GEN.1???
          From Diana - FAU_GEN.1.1/WIDS is for regular audit functions. FAU_GEN.2 is meant it to be the actual alerts that get generated by the wids. She originally had them together and TC stated that alerts are not audit so she moved them all and call them Alerts Data Generation instead of Audit. 
        -->
        <f-component iteration="WIDS2" id="fau_gen.1" name="Alerts Data Generation (WIDS)"><!-- TODO: This component needs to be renumbered. It is actually a third iteration of FAU_GEN.1. Or maybe rewrite the alert items, to be more audit like. -->
          <consistency-rationale/>
          <f-element>
            <title> The TSF shall be able to generate a WIDS audit record of the following auditable
              events: <h:ol type="a">
                <h:li>Start-up and shutdown of the WIDS functions;</h:li>
                <h:li>All WIDS auditable events for the [not specified] level of audit;</h:li>
                <h:li><h:i>[Auditable events listed in <ctr-ref refid="audit"/>;</h:i></h:li>
                <h:li><h:i>Totals of similar events occurring within a specified time
                  period]</h:i></h:li>
              </h:ol>
              <h:table>
                <h:tr><h:td><h:b>Requirement</h:b></h:td><h:td><h:b>Auditable
                  Events</h:b></h:td><h:td><h:b>Additional Audit Record
                    Contents</h:b></h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_ANO_EXT.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_ARP.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_ARP_EXT.2"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_GEN.1/WIDS"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_IDS_EXT.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.1"/></h:td><h:td>whitelisted devices
                  information</h:td><h:td>Type of device (AP or EUD), MAC Address.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.2"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.3"/></h:td><h:td>Unexpected behavior by
                  whitelisted device alert</h:td><h:td>Description of behavior detected (i.e.,
                    bridge, ICS connection), MAC address of whitelisted device, MAC address of the
                    device that the whitelisted device made a connection with, connection start and
                    end.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.4"/></h:td><h:td>Information on location
                  of device</h:td><h:td>Device MAC address, device type, classification of device,
                    sensors that detected device, signal strength as received by detecting
                    sensor(s), proximity to detecting sensor(s) (in meters). </h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.4/CELL"/></h:td><h:td>Information on
                  location of device</h:td><h:td>device MAC address, device type, classification
                    of device, sensors that detected device, signal strength as received by
                    detecting sensor(s), proximity to detecting sensor(s) (in meters).
                  </h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_INV_EXT.5"/></h:td><h:td>Alert generated by
                  detection of rogue device.</h:td><h:td>Description of alert, type of device (AP
                    or EUD), MAC Address, associations made between authorized devices (which APs
                    are EUDs connected to), channel detected on, RF Band detected on, encryption
                    type used by rogue, IEEE 802.11 standard used (a, b, g, n, ac), SSID (if
                    AP).</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_MAC_EXT.1.1"/></h:td><h:td>Alert generated by
                  detection of mac spoofing.</h:td>
                  <h:td>Description of alert, type of device (AP or EUD), MAC Address, associations
                    made between authorized devices (which APs are EUDs connected to), channel
                    detected on, RF Band detected on, encryption type used by rogue, IEEE 802.11
                    standard used (a, b, g, n, ac), SSID (if AP).</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_MAC_EXT.1.2"/></h:td><h:td>Alert generated by
                  detection of mac spoofing.</h:td>
                  <h:td>Description of alert, location as labeled by administrator, time elapsed
                    between connection in different locations, type of device (AP or EUD), MAC
                    Address, associations made between authorized devices (which APs are EUDs
                    connected to), channel detected on, RF Band detected on, encryption type used by
                    rogue, IEEE 802.11 standard used (a, b, g, n, ac), SSID (if AP).</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_SAA.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_SIG_EXT.1"/></h:td><h:td>Alert generated by
                  violaton of user defined signature.</h:td><h:td>Name of alert being triggered(as
                    provided when creating the signature), description of alert (as provided when
                    creating the signature), MAC address of devices involved.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_STG_EXT.1/PCAP"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.1.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.2"/></h:td><h:td>Details about what SSIDs
                  are set as authorized.</h:td><h:td>SSIDs set by administrator as
                    authorized.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.2.4"/></h:td><h:td>Unauthorized
                  activity</h:td><h:td>description of violation (i.e. whitelisted EUD connected to
                    unauthorized SSID), identity information of the devices involved.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.3"/></h:td><h:td>Alert generated for
                  DoS.</h:td><h:td>MAC Address, device type, and classification AP or EUD
                    attacked, DoS details (RF or injection based), for injection-based, indicate
                    type (i.e., deauth flood). </h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.4"/></h:td><h:td>Information about devices
                  and unauthorized authentication methods.</h:td><h:td>MAC Address, device type,
                    and classification of devices involved, authentication method
                    used.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.5"/></h:td><h:td>Information about devices
                  and unauthorized encryption methods.</h:td><h:td>MAC Address, device type, and
                    classification of devices involved, encryption method used.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.5.3"/></h:td><h:td>Information about
                  devices involved.</h:td><h:td>MAC Address, device type, and classification of
                    devices involved (sending and receiving devices).</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.6"/></h:td><h:td>Information about
                  detected devices.</h:td><h:td>Frequency band, channel used within frequency
                    band, identification information (MAC address if applicable or other similar
                    unique ID), device technology (i.e.,cellular), sensor(s) that detected
                    devices.</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.7"/></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WID_EXT.8"/></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FAU_WIP_EXT.1"/></h:td><h:td>Information about action
                  taken.</h:td><h:td>description of violation,the type of containment used, was
                    containment triggered manually or automatically, sensor performing the
                    containment (if wireless), details about the device (s) being contained
                    (classification, device type, MAC address).</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FDP_IFC.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FMT_SMF.1/WIDS"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FPT_FLS.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FPT_ITT.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
                <h:tr><h:td><linkref linkend="FTP_ITC.1"
                /></h:td><h:td>None</h:td><h:td>None</h:td></h:tr>
              </h:table>
              <ctr id="audit" ctr-type="Table">: WIDS Alerts</ctr>
            </title>
            <note role="application">
              The alerts table contains the contents of the alert produced by
              the WIDS. The Alert table includes optional and objective requirements. The auditing
              of optional and objective requirements is only required if the vendor chooses to have
              the requirement evaluated by NIAP. <h:br/><h:br/> 
              With regards to ‘similar’ type events,
              'similar’ events are multiple occurrences of the same auditable event within some time
              period where the only significant difference between these events is the timestamp.
              For example, it is not expected that the TOE generate an individual audit message for
              every event of the same kind that occurs within a reasonable time period. An alert
              must, at a minum, include the details as outlined on the table, but may contain
              additional details. <h:br/><h:br/>
              Per FAU_STG_EXT.1 in the Base-PP, the TOE must support transfer of the audit data to an external IT entity using a trusted channel per FTP_ITC.1. Note that this PP-Module modifies <linkref linkend="FTP_ITC.1"/> from the Base-PP.
            </note>
          </f-element>
          <!-- TODO: need to change the wording of this to be more about the alerts. Need to rename this SFR -->
          <f-element>
            <title> The TSF shall record within each WIDS auditable event as <selectables>
              <selectable>comma separated values (CSV)</selectable>
              <selectable>common log format (CLF)</selectable>
              <selectable>JavaScript Object Notation (JSON)</selectable>
              <selectable>syslog</selectable>
            </selectables> at least the following information: <h:ol type="a">
              <h:li>Date and time of the event, type of event, and subject identity (if
                applicable);</h:li>
              <h:li>For each audit event type, based on the auditable event definitions of the
                functional components included in the PP/ST, [<h:i>auditable events listed in
                  <ctr-ref refid="audit"/></h:i>]. </h:li>
            </h:ol>
            </title>
            <aactivity>
              <TSS> There are no TSS assurance activities for this SFR.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall verify that the operational guidance describes how to
                configure the TOE to result in applicable WIDS data logging. The evaluator shall
                verify that the operational guidance provides instructions for any configuration
                that may be done in regard to logging similar events (e.g., setting thresholds,
                defining time windows, etc.).<h:br/><h:br/>
              </Guidance>
              <Tests> 
                The evaluator shall
                test the TOE’s ability to correctly generate audit records by having the TOE
                generate audit records in accordance with the assurance activities associated with
                the functional requirements in this PP-Module. When verifying the test results, the
                evaluator shall ensure the audit records generated during testing match the format
                specified in the administrative guide, and that the fields in each audit record have
                the proper entries. <h:br/><h:br/> Note that the testing here can be accomplished in
                conjunction with the testing of the security mechanisms directly. 
                The evaluator shall
                test that the alerts yield the expected WIDS/WIPS audit data in the format selected
                in the ST for each WIDS auditable event in <ctr-ref refid="audit"/>. Note that the testing here can
                be accomplished in conjunction with the testing of the security mechanisms directly.
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="Precise Location of Environmental Objects" fam-id="FAU_INV_EXT">
          <mod-def/>
        </ext-comp-def>
        <f-component id="fau_inv_ext.4" name="Precise Location of Environmental Objects"> <!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall detect the physical location of APs and EUDs to within 15 feet of their actual location.</title>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS includes information on location
                tracking, optimal number of sensors and sensor placement to meet the required level
                of accuracy. <h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall review the operational guidance for instructions on how
                to configure location tracking, how to load a location map (if applicable), and
                where in the TSF administrator interface the location of APs and EUDs can be
                viewed.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Deploy an AP within range of the sensors.</step>
                      <step>Verify the TS provides location tracking information about the
                        AP.</step>
                      <step>Verify the AP location presented is within 15 feet actual
                        location.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
          
        <!-- 
        <ext-comp-def title="Signal Library" fam-id="PLACEHOLDER">
          <mod-def/>
        </ext-comp-def>
        <f-component id="PLACEHOLDER" name="Signal Library">
          <consistency-rationale></consistency-rationale>
          <f-element>
            <title> The TSF shall include a signal library.</title>
            <note role="application">The TSF will need to have the ability to import, export, or
              update the exisiting signal library.</note>
            <aactivity> 
              <TSS>test</TSS>
              <Guidance>test</Guidance>
              <Tests>test</Tests>
            </aactivity>
          </f-element>
        </f-component>  -->
        
        <ext-comp-def title="Detection of Unauthorized Connections" fam-id="FAU_INV_EXT">
          <mod-def/>
        </ext-comp-def>
        <f-component id="fau_inv_ext.5" name="Detection of Unauthorized Connections"><!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall detect when non-whitelisted APs have a wired connection to the internal corporate network.</title>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS includes guidance on whether the TSF has
                the capability of detecting APs connecting to the protected wired network
                infrastructure. If the capability is present the TSS shall include configuration
                guidance for this feature.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall review the operational guidance for instructions on how
                to configure the WIDS to detect unauthorized APs connected to the protected wired
                infrastructure.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Deploy a non-whitelisted AP.</step>
                      <step>Connect the AP via wire to the protected network infrastructure.</step>
                      <step>Check the WIDS user interface for a list of detected APs and
                        EUDs.</step>
                      <step>Verify that the rogue AP is detected and an alert generated on the
                        detection of an AP connected to the protected wired infrastructure.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <ext-comp-def title="Device Impersonation" fam-id="FAU_MAC_EXT">
          <fam-behavior/>
        </ext-comp-def>
        <f-component id="fau_mac_ext.1" name="Device Impersonation"> <!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> 
              The TSF shall detect when two sensors in non-overlapping locations receive
              traffic from the same MAC address simultaneously.</title>
            <note role="application">
              The intent of this SFR is to detect MAC spoofing where an
              attacker is able to cause the whitelisted EUD to disconnect and promptly connects a
              non-whitelisted device using the MAC address of the whitelisted EUD.</note>
          </f-element>
          <f-element>
            <title> The TSF shall detect when two sensors in non-overlapping locations receive
              traffic from the MAC addresses of non-whitelisted EUDs within an Authorized administrator-configurable timeframe based on distance between sensors.</title>
            <note role="application">The intent of this SFR is to allow the administrator to
              determine the time that should be allowed between a whitelisted EUD connecting in two
              distant locations.</note>
            <aactivity>
              <TSS> 
                The evaluator shall verify that the TSS describes the behavior of the TOE when
                two sensors in non-overlapping locations receive traffic from the same MAC address
                simultaneously.<h:br/><h:br/>
              </TSS>
              <Guidance> 
                The evaluator shall verify that the operational guidance provides
                instructions on how to deploy the TOE in a manner that allows the TSF to detect when
                two sensors in non-overlapping locations receive traffic from the same MAC address
                simultaneously (i.e. information about the range and placement of sensors to ensure
                non-overlapping coverage).<h:br/><h:br/>
                The evaluator shall verify that the operational guidance provides
                instructions on how to configure the timeframe that should be allowed between two
                subsequent attempts for an EUD to connect from two separate locations.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Setup a whitelisted AP (Location 1).</step>
                      <step>Connect a whitelisted EUD to AP.</step>
                      <step>Setup a second whitelisted AP and a non-whitelisted EUD in a separate
                        non-overlapping location where the WIDS also has sensors. Or simulate the
                        distant non-verlapping locations by deploying the second AP in a shielded
                        environment connected to the valid network (Location 2).</step>
                      <step>Spoof the MAC address of the EUD in location 1 with the EUD in location
                        2 and connect it to the whitelisted AP in location 2. Make sure both EUDs
                        are connected at the same time.</step>
                      <step>Verify that the TSF detected and generated an alert.</step>
                    </steplist>
                  </test>
                
                  <test>
                    <steplist>
                      <step>Configure the timeframe allowed between connection of two EUDs in two
                        separate locations (Location 1, Location 2).</step>
                      <step>Setup a whitelisted AP (Location 1). </step>
                      <step>Connect a whitelisted EUD to AP.</step>
                      <step>Setup a second whitelisted AP and a non-whitelisted EUD in a separate
                        non-overlapping location where the WIDS also has sensors. Or simulate the
                        distant non-verlapping locations by deploying the second AP in a shielded
                        environment connected to the valid network (Location 2).</step>
                      <step>Spoof the MAC address of the EUD in location 1 with the EUD in location
                        2 and connect it to the whitelisted AP in location 2. Make sure that the
                        time between connections is shorter than the time timeframe
                        allowed/configured. </step>
                      <step>Verify that the TSF detected and generated an alert.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        
        <!-- Justin: Is there a reason I need to specifically account for proprietary traffic monitoring? This was in the previous version, but I want to delete entirely-->        
        <!-- <ext-comp-def title="Proprietary Traffic Monitoring" fam-id="FAU_WID_EXT">
          <mod-def/>
        </ext-comp-def>
        <f-component id="fau_wid_ext.8" name="Wireless Intrusion Detection – Proprietary Traffic Monitoring">
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall detect the presence of all vendor proprietary network traffic
              matching the 802.11 monitoring SFP for all IEEE 802.11 a, b, g, n, ac frame types and subtypes between:
              <h:ul>
                <h:li>authorized APs and authorized EUDs</h:li>
                <h:li>authorized APs and unauthorized EUDs</h:li>
                <h:li>unauthorized APs and authorized EUDs.</h:li>
              </h:ul></title>
            <note role="Application">
              The "802.11 monitoring SFP" is a security function policy and
              the SFRs that reference this policy describe what the policy does. The "802.11
              monitoring SFP" is established in <linkref linkend="FDP_IFC.1"/> and defined through
              <linkref linkend="FAU_WID_EXT"/> SFRs. A vendor does not have to formally define
              this policy, it only needs to comply with the SFRs.</note>
            <aactivity>
              <TSS> 
                There are no TSS assurance activities for this SFR.<h:br/><h:br/>
              </TSS>
              <Guidance> 
                There are no operational guidance activities for this SFR.<h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>
                    <steplist>
                      <step>Set the WIDS sensor for a set channel.</step>
                      <step>Start a traffic capture from the WIDS sensor.</step>
                      <step>Send a set number of frames on the sensor's operating channel for all
                        IEEE 802.11 a, b, g, n, ac vendor propietary frame types and subtypes
                        from/to the following: <h:ol>
                          <h:li><h:i>authorized APs and authorized EUDs.</h:i></h:li>
                          <h:li><h:i>authorized APs and unauthorized EUDs.</h:i></h:li>
                          <h:li><h:i>unauthorized APs and authorized EUDs.</h:i></h:li>
                        </h:ol>
                      </step>
                      <step>Provide a list of the frames types and subtypos that were used for
                        testing and verify that they were all detected.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
        -->
        
        <ext-comp-def title="Wireless Intrusion Prevention" fam-id="FAU_WIP_EXT">
          <fam-behavior/>
        </ext-comp-def>
        <f-component id="fau_wip_ext.1" name="Wireless Intrusion Prevention"><!-- DONE -->
          <consistency-rationale/>
          <comp-lev/>
          <management/>
          <audit/>
          <dependencies/>
          <f-element>
            <title> The TSF shall allow an Authorized Administrator to isolate a wireless AP or EUD
              from the network monitored by the TSF using the following methods: <selectables>
                <selectable>wireless containment</selectable>
                <selectable>wire-side containment of an unauthorized AP connected to the internal
                  corporate wired network.</selectable>
              </selectables>
            </title>
            <note role="application">It is expected that an Authorized Administrator will be
              responsible for confirming the AP or EUD as a rogue AP or EUD to initiate wireless
              containment. <h:br/> In this SFR the containment of an an unauthorized AP connected to
              the internal corporate wired network refers to an unauthorized AP that is physically
              connected (via wire) to the protected internal wired infrastructure. </note>
            <aactivity>
              <TSS> The evaluator shall verify that the TSS includes a list of available containment
                methods on the TSF and how to configure them.<h:br/><h:br/>
              </TSS>
              <Guidance> There are no operational guidance activities for this SFR.<h:br/><h:br/>
              </Guidance>
              <Tests> Configure the containment methods available on the TSF and perform the
                following test for each method. <testlist>
                  <test>
                    <steplist>
                      <step>Deploy a non-whitelisted AP and connect to the protected wired
                        infrastructure via wire (make sure it gets classified as rogue, or manually
                        classify as such).</step>
                      <step>Connect a whitelisted EUD to the AP.</step>
                      <step>Verify that TSF generates an alert, breaks the connection of the
                        whitelisted EUD from the rogue AP, and contains the rogue AP.</step>
                    </steplist>
                  </test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
      
      <subsection title="Protection of the TSF (FPT)" id="fpt">
        <f-component id="fpt_fls.1" name="Basic Internal TSF Data Transfer Protection"> <!-- DONE -->
          <consistency-rationale/>
          <f-element>
            <title> The TSF shall preserve a secure state when the following types of failures
              occur: [<h:i>sensor functionality failure, potential compromise of the TSF</h:i>]. </title>
            <note role="application"> At minimum, the preservation of a secure state requires the
              generation of audit records when the defined failure conditions occur. </note>
            <aactivity>
              <TSS> The evaluator shall review the TSS section to determine that the TOE’s
                implementation of the fail secure functionality is documented. The evaluator shall
                examine the TSS section to ensure that all failure modes specified in the ST are
                described.<h:br/><h:br/>
              </TSS>
              <Guidance> The evaluator shall review the operational guidance to verify that it
                identifies the potential TOE failures, how the TSF preserves a secure state
                following these failures, and any actions that are required to restore the TOE to
                normal operation following the transition to a failure state. <h:br/><h:br/>
              </Guidance>
              <Tests>
                <testlist>
                  <test>For each failure mode specified in the ST, the evaluator shall ensure that
                    the TOE attains a secure state after initiating each failure mode type.</test>
                </testlist>
              </Tests>
            </aactivity>
          </f-element>
        </f-component>
      </subsection>
    </obj-sfrs>
  </chapter>
  <bibliography>
    <cc-entry/>
  </bibliography>
  <acronyms/>
</Module>

